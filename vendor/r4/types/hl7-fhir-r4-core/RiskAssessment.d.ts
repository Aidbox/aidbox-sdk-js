/** GENERATED BY zen-cli
DON'T MODIFY MANUALLY */
import { Annotation } from "./Annotation";
import { Period } from "./Period";
import { CodeableConcept } from "./CodeableConcept";
import { dateTime } from "./dateTime";
import { Range } from "./Range";
import { DomainResource } from "./DomainResource";
import { Element } from "./Element";
import { Reference } from "./Reference";
import { Identifier } from "./Identifier";
import { BackboneElement } from "./BackboneElement";
import { decimal } from "./decimal";
/** An assessment of the likely outcome(s) for a patient or other subject as well as the likelihood of each outcome. */
export interface RiskAssessment extends DomainResource {
    resourceType: 'RiskAssessment';
    _mitigation?: Element;
    /** Part of this occurrence */
    parent?: Reference;
    /** Where was assessment performed? */
    encounter?: Reference<'Encounter'>;
    /** Outcome predicted */
    prediction?: Array<RiskAssessmentPrediction>;
    /** Evaluation mechanism */
    method?: CodeableConcept;
    _status?: Element;
    /** Information used in assessment */
    basis?: Array<Reference>;
    /** Why the assessment was necessary? */
    reasonCode?: Array<CodeableConcept>;
    /** How to reduce risk */
    mitigation?: string;
    /** Comments on the risk assessment */
    note?: Array<Annotation>;
    occurrencePeriod?: Period;
    /** registered | preliminary | final | amended + */
    status: `${RiskAssessmentStatus}`;
    /** Condition assessed */
    condition?: Reference<'Condition'>;
    /** Type of assessment */
    code?: CodeableConcept;
    /** Unique identifier for the assessment */
    identifier?: Array<Identifier>;
    /** Request fulfilled by this assessment */
    basedOn?: Reference;
    occurrenceDateTime?: dateTime;
    /** Who/what does assessment apply to? */
    subject: Reference<'Patient' | 'Group'>;
    /** Who did assessment? */
    performer?: Reference<'PractitionerRole' | 'Device' | 'Practitioner'>;
    /** Why the assessment was necessary? */
    reasonReference?: Array<Reference>;
    _occurrenceDateTime?: Element;
}
/** Outcome predicted */
export interface RiskAssessmentPrediction extends BackboneElement {
    _probabilityDecimal?: Element;
    /** Relative likelihood */
    relativeRisk?: decimal;
    whenRange?: Range;
    /** Possible outcome for the subject */
    outcome?: CodeableConcept;
    whenPeriod?: Period;
    /** Explanation of prediction */
    rationale?: string;
    _rationale?: Element;
    probabilityRange?: Range;
    /** Likelihood of specified outcome as a qualitative value */
    qualitativeRisk?: CodeableConcept;
    probabilityDecimal?: decimal;
    _relativeRisk?: Element;
}
/** registered | preliminary | final | amended + */
export declare enum RiskAssessmentStatus {
    Amended = "amended",
    Cancelled = "cancelled",
    Corrected = "corrected",
    EnteredInError = "entered-in-error",
    Final = "final",
    Preliminary = "preliminary",
    Registered = "registered",
    Unknown = "unknown"
}
