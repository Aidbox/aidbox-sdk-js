/** GENERATED BY zen-cli
DON'T MODIFY MANUALLY */
import { Annotation } from "./Annotation";
import { Period } from "./Period";
import { CodeableConcept } from "./CodeableConcept";
import { SimpleQuantity } from "./SimpleQuantity";
import { dateTime } from "./dateTime";
import { Duration } from "./Duration";
import { DomainResource } from "./DomainResource";
import { Element } from "./Element";
import { Reference } from "./Reference";
import { Identifier } from "./Identifier";
import { BackboneElement } from "./BackboneElement";
/** A sample to be used for analysis. */
export interface Specimen extends DomainResource {
    resourceType: 'Specimen';
    /** Why the specimen was collected */
    request?: Array<Reference>;
    /** The time when specimen was received for processing */
    receivedTime?: dateTime;
    /** Processing and processing step details */
    processing?: Array<SpecimenProcessing>;
    /** Specimen from which this specimen originated */
    parent?: Array<Reference>;
    _status?: Element;
    /** Kind of material that forms the specimen */
    type?: CodeableConcept;
    /** Comments */
    note?: Array<Annotation>;
    /** available | unavailable | unsatisfactory | entered-in-error */
    status?: `${SpecimenStatus}`;
    /** State of the specimen */
    condition?: Array<CodeableConcept>;
    /** Direct container of specimen (tube/slide, etc.) */
    container?: Array<SpecimenContainer>;
    /** External Identifier */
    identifier?: Array<Identifier>;
    /** Identifier assigned by the lab */
    accessionIdentifier?: Identifier;
    _receivedTime?: Element;
    /** Collection details */
    collection?: SpecimenCollection;
    /** Where the specimen came from. This may be from patient(s), from a location (e.g., the source of an environmental sample), or a sampling of a substance or a device */
    subject?: Reference<'Patient' | 'Device' | 'Location' | 'Substance' | 'Group'>;
}
/** Processing and processing step details */
export interface SpecimenProcessing extends BackboneElement {
    /** Textual description of procedure */
    description?: string;
    _description?: Element;
    /** Indicates the treatment step  applied to the specimen */
    procedure?: CodeableConcept;
    /** Material used in the processing step */
    additive?: Array<Reference>;
    timeDateTime?: dateTime;
    _timeDateTime?: Element;
    timePeriod?: Period;
}
/** available | unavailable | unsatisfactory | entered-in-error */
export declare enum SpecimenStatus {
    Available = "available",
    EnteredInError = "entered-in-error",
    Unavailable = "unavailable",
    Unsatisfactory = "unsatisfactory"
}
/** Direct container of specimen (tube/slide, etc.) */
export interface SpecimenContainer extends BackboneElement {
    /** Textual description of the container */
    description?: string;
    /** Container volume or size */
    capacity?: SimpleQuantity;
    /** Quantity of specimen within container */
    specimenQuantity?: SimpleQuantity;
    /** Kind of container directly associated with specimen */
    type?: CodeableConcept;
    _description?: Element;
    additiveCodeableConcept?: CodeableConcept;
    /** Id for the container */
    identifier?: Array<Identifier>;
    additiveReference?: Reference<'Substance'>;
}
/** Collection details */
export interface SpecimenCollection extends BackboneElement {
    collectedDateTime?: dateTime;
    fastingStatusCodeableConcept?: CodeableConcept;
    /** Technique used to perform collection */
    method?: CodeableConcept;
    fastingStatusDuration?: Duration;
    /** How long it took to collect specimen */
    duration?: Duration;
    /** Who collected the specimen */
    collector?: Reference<'PractitionerRole' | 'Practitioner'>;
    _collectedDateTime?: Element;
    /** Anatomical collection site */
    bodySite?: CodeableConcept;
    /** The quantity of specimen collected */
    quantity?: SimpleQuantity;
    collectedPeriod?: Period;
}
