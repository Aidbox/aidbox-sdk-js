/** GENERATED BY zen-cli
DON'T MODIFY MANUALLY */
import { Period } from "./Period";
import { CodeableConcept } from "./CodeableConcept";
import { dateTime } from "./dateTime";
import { integer } from "./integer";
import { DomainResource } from "./DomainResource";
import { Element } from "./Element";
import { Reference } from "./Reference";
import { Identifier } from "./Identifier";
import { BackboneElement } from "./BackboneElement";
import { decimal } from "./decimal";
/** A material substance originating from a biological entity intended to be transplanted or infused
into another (possibly the same) biological entity. */
export interface BiologicallyDerivedProduct extends DomainResource {
    resourceType: 'BiologicallyDerivedProduct';
    _quantity?: Element;
    /** Procedure request */
    request?: Array<Reference>;
    /** Any processing of the product during collection */
    processing?: Array<BiologicallyDerivedProductProcessing>;
    _productCategory?: Element;
    /** BiologicallyDerivedProduct parent */
    parent?: Array<Reference>;
    _status?: Element;
    /** available | unavailable */
    status?: `${BiologicallyDerivedProductStatus}`;
    /** External ids for this item */
    identifier?: Array<Identifier>;
    /** What this biologically derived product is */
    productCode?: CodeableConcept;
    /** Product storage */
    storage?: Array<BiologicallyDerivedProductStorage>;
    /** The amount of this biologically derived product */
    quantity?: integer;
    /** organ | tissue | fluid | cells | biologicalAgent */
    productCategory?: `${BiologicallyDerivedProductProductCategory}`;
    /** Any manipulation of product post-collection */
    manipulation?: BiologicallyDerivedProductManipulation;
    /** How this product was collected */
    collection?: BiologicallyDerivedProductCollection;
}
/** Any processing of the product during collection */
export interface BiologicallyDerivedProductProcessing extends BackboneElement {
    /** Description of of processing */
    description?: string;
    _description?: Element;
    /** Procesing code */
    procedure?: CodeableConcept;
    /** Substance added during processing */
    additive?: Reference<'Substance'>;
    timeDateTime?: dateTime;
    _timeDateTime?: Element;
    timePeriod?: Period;
}
/** available | unavailable */
export declare enum BiologicallyDerivedProductStatus {
    Available = "available",
    Unavailable = "unavailable"
}
/** farenheit | celsius | kelvin */
export declare enum BiologicallyDerivedProductScale {
    Celsius = "celsius",
    Farenheit = "farenheit",
    Kelvin = "kelvin"
}
/** Product storage */
export interface BiologicallyDerivedProductStorage extends BackboneElement {
    /** Description of storage */
    description?: string;
    _description?: Element;
    /** Storage temperature */
    temperature?: decimal;
    _temperature?: Element;
    /** farenheit | celsius | kelvin */
    scale?: `${BiologicallyDerivedProductScale}`;
    _scale?: Element;
    /** Storage timeperiod */
    duration?: Period;
}
/** organ | tissue | fluid | cells | biologicalAgent */
export declare enum BiologicallyDerivedProductProductCategory {
    BiologicalAgent = "biologicalAgent",
    Cells = "cells",
    Fluid = "fluid",
    Organ = "organ",
    Tissue = "tissue"
}
/** Any manipulation of product post-collection */
export interface BiologicallyDerivedProductManipulation extends BackboneElement {
    /** Description of manipulation */
    description?: string;
    _description?: Element;
    timeDateTime?: dateTime;
    _timeDateTime?: Element;
    timePeriod?: Period;
}
/** How this product was collected */
export interface BiologicallyDerivedProductCollection extends BackboneElement {
    /** Individual performing collection */
    collector?: Reference<'PractitionerRole' | 'Practitioner'>;
    /** Who is product from */
    source?: Reference<'Patient' | 'Organization'>;
    collectedDateTime?: dateTime;
    _collectedDateTime?: Element;
    collectedPeriod?: Period;
}
