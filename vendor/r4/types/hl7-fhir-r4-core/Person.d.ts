/** GENERATED BY zen-cli
DON'T MODIFY MANUALLY */
import { Address } from "./Address";
import { Attachment } from "./Attachment";
import { ContactPoint } from "./ContactPoint";
import { HumanName } from "./HumanName";
import { DomainResource } from "./DomainResource";
import { date } from "./date";
import { Element } from "./Element";
import { Reference } from "./Reference";
import { Identifier } from "./Identifier";
import { BackboneElement } from "./BackboneElement";
/** Demographics and administrative information about a person independent of a specific health-related context. */
export interface Person extends DomainResource {
    resourceType: 'Person';
    _active?: Element;
    /** One or more addresses for the person */
    address?: Array<Address>;
    /** The organization that is the custodian of the person record */
    managingOrganization?: Reference<'Organization'>;
    /** A name associated with the person */
    name?: Array<HumanName>;
    _gender?: Element;
    /** The date on which the person was born */
    birthDate?: date;
    _birthDate?: Element;
    /** Image of the person */
    photo?: Attachment;
    /** Link to a resource that concerns the same actual person */
    link?: Array<PersonLink>;
    /** This person's record is in active use */
    active?: boolean;
    /** A human identifier for this person */
    identifier?: Array<Identifier>;
    /** A contact detail for the person */
    telecom?: Array<ContactPoint>;
    /** male | female | other | unknown */
    gender?: `${PersonGender}`;
}
/** level1 | level2 | level3 | level4 */
export declare enum PersonLinkAssurance {
    Level1 = "level1",
    Level2 = "level2",
    Level3 = "level3",
    Level4 = "level4"
}
/** Link to a resource that concerns the same actual person */
export interface PersonLink extends BackboneElement {
    /** The resource to which this actual person is associated */
    target: Reference<'Patient' | 'Person' | 'Practitioner' | 'RelatedPerson'>;
    /** level1 | level2 | level3 | level4 */
    assurance?: `${PersonLinkAssurance}`;
    _assurance?: Element;
}
/** male | female | other | unknown */
export declare enum PersonGender {
    Female = "female",
    Male = "male",
    Other = "other",
    Unknown = "unknown"
}
