/** GENERATED BY zen-cli
DON'T MODIFY MANUALLY */
import { CodeableConcept } from "./CodeableConcept";
import { SimpleQuantity } from "./SimpleQuantity";
import { dateTime } from "./dateTime";
import { DomainResource } from "./DomainResource";
import { Ratio } from "./Ratio";
import { Element } from "./Element";
import { Reference } from "./Reference";
import { code } from "./code";
import { Identifier } from "./Identifier";
import { BackboneElement } from "./BackboneElement";
/** A homogeneous material with a definite composition. */
export interface Substance extends DomainResource {
    /** Textual description of the substance, comments */
    description?: string;
    /** What class/type of substance this is */
    category?: Array<CodeableConcept>;
    /** If this describes a specific package/container of the substance */
    instance?: Array<SubstanceInstance>;
    _status?: Element;
    _description?: Element;
    /** Composition information about the substance */
    ingredient?: Array<SubstanceIngredient>;
    /** active | inactive | entered-in-error */
    status?: code;
    /** What substance this is */
    code: CodeableConcept;
    /** Unique identifier */
    identifier?: Array<Identifier>;
}
/** If this describes a specific package/container of the substance */
export interface SubstanceInstance extends BackboneElement {
    /** Identifier of the package/container */
    identifier?: Identifier;
    /** When no longer valid to use */
    expiry?: dateTime;
    _expiry?: Element;
    /** Amount of substance in the package */
    quantity?: SimpleQuantity;
}
/** Composition information about the substance */
export interface SubstanceIngredient extends BackboneElement {
    /** Optional amount (concentration) */
    quantity?: Ratio;
    substanceCodeableConcept: CodeableConcept;
    substanceReference: Reference<"Substance">;
}
