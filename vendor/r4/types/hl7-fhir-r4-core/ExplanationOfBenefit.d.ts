/** GENERATED BY zen-cli
DON'T MODIFY MANUALLY */
import { Address } from "./Address";
import { Attachment } from "./Attachment";
import { positiveInt } from "./positiveInt";
import { unsignedInt } from "./unsignedInt";
import { Period } from "./Period";
import { CodeableConcept } from "./CodeableConcept";
import { SimpleQuantity } from "./SimpleQuantity";
import { Coding } from "./Coding";
import { dateTime } from "./dateTime";
import { Quantity } from "./Quantity";
import { DomainResource } from "./DomainResource";
import { Money } from "./Money";
import { date } from "./date";
import { Element } from "./Element";
import { Reference } from "./Reference";
import { Identifier } from "./Identifier";
import { BackboneElement } from "./BackboneElement";
import { decimal } from "./decimal";
/** This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided. */
export interface ExplanationOfBenefit extends DomainResource {
    resourceType: 'ExplanationOfBenefit';
    _created?: Element;
    /** The recipient of the products and services */
    patient: Reference<'Patient'>;
    /** Claim response reference */
    claimResponse?: Reference<'ClaimResponse'>;
    /** Patient insurance information */
    insurance: Array<ExplanationOfBenefitInsurance>;
    /** Balance by Benefit Category */
    benefitBalance?: Array<ExplanationOfBenefitBenefitBalance>;
    /** Servicing Facility */
    facility?: Reference<'Location'>;
    /** Note concerning adjudication */
    processNote?: Array<ExplanationOfBenefitProcessNote>;
    /** Pertinent diagnosis information */
    diagnosis?: Array<ExplanationOfBenefitDiagnosis>;
    /** Preauthorization reference */
    preAuthRef?: Array<string>;
    /** Header-level adjudication */
    adjudication?: Array<ExplanationOfBenefitItemAdjudication>;
    _disposition?: Element;
    /** Author of the claim */
    enterer?: Reference<'PractitionerRole' | 'Practitioner'>;
    /** Supporting information */
    supportingInfo?: Array<ExplanationOfBenefitSupportingInfo>;
    _precedence?: Element;
    /** claim | preauthorization | predetermination */
    use: `${ExplanationOfBenefitUse}`;
    /** Payment Details */
    payment?: ExplanationOfBenefitPayment;
    /** Product or service provided */
    item?: Array<ExplanationOfBenefitItem>;
    _status?: Element;
    /** Category or discipline */
    type: CodeableConcept;
    /** Response creation date */
    created: dateTime;
    /** Clinical procedures performed */
    procedure?: Array<ExplanationOfBenefitProcedure>;
    /** queued | complete | error | partial */
    outcome: `${ExplanationOfBenefitOutcome}`;
    /** Prior or corollary claims */
    related?: Array<ExplanationOfBenefitRelated>;
    _outcome?: Element;
    /** Disposition Message */
    disposition?: string;
    /** Treatment Referral */
    referral?: Reference<'ServiceRequest'>;
    /** Preauthorization in-effect period */
    preAuthRefPeriod?: Array<Period>;
    /** Adjudication totals */
    total?: Array<ExplanationOfBenefitTotal>;
    /** Party responsible for reimbursement */
    insurer: Reference<'Organization'>;
    /** Funds reserved status */
    fundsReserve?: CodeableConcept;
    /** Desired processing urgency */
    priority?: CodeableConcept;
    /** Details of the event */
    accident?: ExplanationOfBenefitAccident;
    /** active | cancelled | draft | entered-in-error */
    status: `${ExplanationOfBenefitStatus}`;
    /** Recipient of benefits payable */
    payee?: ExplanationOfBenefitPayee;
    /** Prescription authorizing services or products */
    prescription?: Reference<'VisionPrescription' | 'MedicationRequest'>;
    /** Relevant time frame for the claim */
    billablePeriod?: Period;
    /** Business Identifier for the resource */
    identifier?: Array<Identifier>;
    /** Printed reference or actual form */
    form?: Attachment;
    _preAuthRef?: Array<Element>;
    /** More granular claim type */
    subType?: CodeableConcept;
    /** For whom to reserve funds */
    fundsReserveRequested?: CodeableConcept;
    /** When the benefits are applicable */
    benefitPeriod?: Period;
    /** Precedence (primary, secondary, etc.) */
    precedence?: positiveInt;
    /** Printed form identifier */
    formCode?: CodeableConcept;
    /** Party responsible for the claim */
    provider: Reference<'PractitionerRole' | 'Organization' | 'Practitioner'>;
    /** Insurer added line items */
    addItem?: Array<ExplanationOfBenefitAddItem>;
    /** Original prescription if superceded by fulfiller */
    originalPrescription?: Reference<'MedicationRequest'>;
    _use?: Element;
    /** Care Team members */
    careTeam?: Array<ExplanationOfBenefitCareTeam>;
    /** Claim reference */
    claim?: Reference<'Claim'>;
}
/** Insurer added line items */
export interface ExplanationOfBenefitAddItem extends BackboneElement {
    locationAddress?: Address;
    _noteNumber?: Array<Element>;
    /** Service/Product billing modifiers */
    modifier?: Array<CodeableConcept>;
    /** Added items adjudication */
    adjudication?: Array<ExplanationOfBenefitItemAdjudication>;
    locationCodeableConcept?: CodeableConcept;
    _factor?: Element;
    /** Item sequence number */
    itemSequence?: Array<positiveInt>;
    /** Total item cost */
    net?: Money;
    /** Detail sequence number */
    detailSequence?: Array<positiveInt>;
    /** Anatomical sub-location */
    subSite?: Array<CodeableConcept>;
    /** Billing, service, product, or drug code */
    productOrService: CodeableConcept;
    locationReference?: Reference<'Location'>;
    _detailSequence?: Array<Element>;
    _itemSequence?: Array<Element>;
    /** Program the product or service is provided under */
    programCode?: Array<CodeableConcept>;
    _subDetailSequence?: Array<Element>;
    /** Price scaling factor */
    factor?: decimal;
    servicedDate?: date;
    /** Subdetail sequence number */
    subDetailSequence?: Array<positiveInt>;
    /** Anatomical location */
    bodySite?: CodeableConcept;
    /** Count of products or services */
    quantity?: SimpleQuantity;
    _servicedDate?: Element;
    /** Authorized providers */
    provider?: Array<Reference>;
    /** Applicable note numbers */
    noteNumber?: Array<positiveInt>;
    /** Fee, charge or cost per item */
    unitPrice?: Money;
    servicedPeriod?: Period;
    /** Insurer added line items */
    detail?: Array<ExplanationOfBenefitDetail>;
}
/** Prior or corollary claims */
export interface ExplanationOfBenefitRelated extends BackboneElement {
    /** Reference to the related claim */
    claim?: Reference<'Claim'>;
    /** How the reference claim is related */
    relationship?: CodeableConcept;
    /** File or case reference */
    reference?: Identifier;
}
/** Pertinent diagnosis information */
export interface ExplanationOfBenefitDiagnosis extends BackboneElement {
    /** Diagnosis instance identifier */
    sequence: positiveInt;
    _sequence?: Element;
    diagnosisCodeableConcept: CodeableConcept;
    diagnosisReference: Reference<'Condition'>;
    /** Timing or nature of the diagnosis */
    type?: Array<CodeableConcept>;
    /** Present on admission */
    onAdmission?: CodeableConcept;
    /** Package billing code */
    packageCode?: CodeableConcept;
}
/** Care Team members */
export interface ExplanationOfBenefitCareTeam extends BackboneElement {
    /** Order of care team */
    sequence: positiveInt;
    _sequence?: Element;
    /** Practitioner or organization */
    provider: Reference<'PractitionerRole' | 'Organization' | 'Practitioner'>;
    /** Indicator of the lead practitioner */
    responsible?: boolean;
    _responsible?: Element;
    /** Function within the team */
    role?: CodeableConcept;
    /** Practitioner credential or specialization */
    qualification?: CodeableConcept;
}
/** Patient insurance information */
export interface ExplanationOfBenefitInsurance extends BackboneElement {
    /** Coverage to be used for adjudication */
    focal: boolean;
    _focal?: Element;
    /** Insurance information */
    coverage: Reference<'Coverage'>;
    /** Prior authorization reference number */
    preAuthRef?: Array<string>;
    _preAuthRef?: Array<Element>;
}
/** queued | complete | error | partial */
export declare enum ExplanationOfBenefitOutcome {
    Complete = "complete",
    Error = "error",
    Partial = "partial",
    Queued = "queued"
}
/** active | cancelled | draft | entered-in-error */
export declare enum ExplanationOfBenefitStatus {
    Active = "active",
    Cancelled = "cancelled",
    Draft = "draft",
    EnteredInError = "entered-in-error"
}
/** Balance by Benefit Category */
export interface ExplanationOfBenefitBenefitBalance extends BackboneElement {
    /** Description of the benefit or services covered */
    description?: string;
    /** Benefit classification */
    category: CodeableConcept;
    /** Individual or family */
    unit?: CodeableConcept;
    /** Excluded from the plan */
    excluded?: boolean;
    /** Short name for the benefit */
    name?: string;
    /** Benefit Summary */
    financial?: Array<ExplanationOfBenefitFinancial>;
    _description?: Element;
    /** Annual or lifetime */
    term?: CodeableConcept;
    _name?: Element;
    /** In or out of network */
    network?: CodeableConcept;
    _excluded?: Element;
}
/** Benefit Summary */
export interface ExplanationOfBenefitFinancial extends BackboneElement {
    allowedMoney?: Money;
    _allowedString?: Element;
    /** Benefit classification */
    type: CodeableConcept;
    _allowedUnsignedInt?: Element;
    allowedUnsignedInt?: unsignedInt;
    _usedUnsignedInt?: Element;
    usedUnsignedInt?: unsignedInt;
    allowedString?: string;
    usedMoney?: Money;
}
/** Adjudication details */
export interface ExplanationOfBenefitItemAdjudication extends BackboneElement {
    /** Type of adjudication information */
    category: CodeableConcept;
    /** Explanation of adjudication outcome */
    reason?: CodeableConcept;
    /** Monetary amount */
    amount?: Money;
    /** Non-monitary value */
    value?: decimal;
    _value?: Element;
}
/** Note concerning adjudication */
export interface ExplanationOfBenefitProcessNote extends BackboneElement {
    /** Note instance identifier */
    number?: positiveInt;
    _number?: Element;
    /** display | print | printoper */
    type?: `${ExplanationOfBenefitProcessnoteType}`;
    _type?: Element;
    /** Note explanatory text */
    text?: string;
    _text?: Element;
    /** Language of the text */
    language?: CodeableConcept;
}
/** Product or service provided */
export interface ExplanationOfBenefitItem extends BackboneElement {
    /** Benefit classification */
    category?: CodeableConcept;
    /** Applicable diagnoses */
    diagnosisSequence?: Array<positiveInt>;
    _sequence?: Element;
    /** Applicable procedures */
    procedureSequence?: Array<positiveInt>;
    locationAddress?: Address;
    _noteNumber?: Array<Element>;
    /** Product or service billing modifiers */
    modifier?: Array<CodeableConcept>;
    /** Revenue or cost center code */
    revenue?: CodeableConcept;
    adjudication?: Array<ExplanationOfBenefitItemAdjudication>;
    /** Encounters related to this billed item */
    encounter?: Array<Reference>;
    _careTeamSequence?: Array<Element>;
    locationCodeableConcept?: CodeableConcept;
    _factor?: Element;
    /** Total item cost */
    net?: Money;
    /** Anatomical sub-location */
    subSite?: Array<CodeableConcept>;
    _procedureSequence?: Array<Element>;
    /** Applicable care team members */
    careTeamSequence?: Array<positiveInt>;
    /** Billing, service, product, or drug code */
    productOrService: CodeableConcept;
    _informationSequence?: Array<Element>;
    locationReference?: Reference<'Location'>;
    /** Unique device identifier */
    udi?: Array<Reference>;
    /** Applicable exception and supporting information */
    informationSequence?: Array<positiveInt>;
    /** Program the product or service is provided under */
    programCode?: Array<CodeableConcept>;
    /** Price scaling factor */
    factor?: decimal;
    servicedDate?: date;
    _diagnosisSequence?: Array<Element>;
    /** Item instance identifier */
    sequence: positiveInt;
    /** Anatomical location */
    bodySite?: CodeableConcept;
    /** Count of products or services */
    quantity?: SimpleQuantity;
    _servicedDate?: Element;
    /** Applicable note numbers */
    noteNumber?: Array<positiveInt>;
    /** Fee, charge or cost per item */
    unitPrice?: Money;
    servicedPeriod?: Period;
    /** Additional items */
    detail?: Array<ExplanationOfBenefitDetail>;
}
/** Details of the event */
export interface ExplanationOfBenefitAccident extends BackboneElement {
    /** When the incident occurred */
    date?: date;
    _date?: Element;
    /** The nature of the accident */
    type?: CodeableConcept;
    locationAddress?: Address;
    locationReference?: Reference<'Location'>;
}
/** Additional items */
export interface ExplanationOfBenefitDetail extends BackboneElement {
    /** Benefit classification */
    category?: CodeableConcept;
    _sequence?: Element;
    _noteNumber?: Array<Element>;
    /** Service/Product billing modifiers */
    modifier?: Array<CodeableConcept>;
    /** Revenue or cost center code */
    revenue?: CodeableConcept;
    /** Detail level adjudication details */
    adjudication?: Array<ExplanationOfBenefitItemAdjudication>;
    _factor?: Element;
    /** Total item cost */
    net?: Money;
    /** Billing, service, product, or drug code */
    productOrService: CodeableConcept;
    /** Unique device identifier */
    udi?: Array<Reference>;
    /** Program the product or service is provided under */
    programCode?: Array<CodeableConcept>;
    /** Price scaling factor */
    factor?: decimal;
    /** Product or service provided */
    sequence: positiveInt;
    /** Additional items */
    subDetail?: Array<ExplanationOfBenefitSubDetail>;
    /** Count of products or services */
    quantity?: SimpleQuantity;
    /** Applicable note numbers */
    noteNumber?: Array<positiveInt>;
    /** Fee, charge or cost per item */
    unitPrice?: Money;
}
/** Additional items */
export interface ExplanationOfBenefitSubDetail extends BackboneElement {
    /** Benefit classification */
    category?: CodeableConcept;
    _sequence?: Element;
    _noteNumber?: Array<Element>;
    /** Service/Product billing modifiers */
    modifier?: Array<CodeableConcept>;
    /** Revenue or cost center code */
    revenue?: CodeableConcept;
    /** Subdetail level adjudication details */
    adjudication?: Array<ExplanationOfBenefitItemAdjudication>;
    _factor?: Element;
    /** Total item cost */
    net?: Money;
    /** Billing, service, product, or drug code */
    productOrService: CodeableConcept;
    /** Unique device identifier */
    udi?: Array<Reference>;
    /** Program the product or service is provided under */
    programCode?: Array<CodeableConcept>;
    /** Price scaling factor */
    factor?: decimal;
    /** Product or service provided */
    sequence: positiveInt;
    /** Count of products or services */
    quantity?: SimpleQuantity;
    /** Applicable note numbers */
    noteNumber?: Array<positiveInt>;
    /** Fee, charge or cost per item */
    unitPrice?: Money;
}
/** Adjudication totals */
export interface ExplanationOfBenefitTotal extends BackboneElement {
    /** Type of adjudication information */
    category: CodeableConcept;
    /** Financial total for the category */
    amount: Money;
}
/** Clinical procedures performed */
export interface ExplanationOfBenefitProcedure extends BackboneElement {
    _sequence?: Element;
    /** When the procedure was performed */
    date?: dateTime;
    procedureCodeableConcept: CodeableConcept;
    procedureReference: Reference<'Procedure'>;
    _date?: Element;
    /** Category of Procedure */
    type?: Array<CodeableConcept>;
    /** Unique device identifier */
    udi?: Array<Reference>;
    /** Procedure instance identifier */
    sequence: positiveInt;
}
/** Recipient of benefits payable */
export interface ExplanationOfBenefitPayee extends BackboneElement {
    /** Category of recipient */
    type?: CodeableConcept;
    /** Recipient reference */
    party?: Reference<'Patient' | 'PractitionerRole' | 'Organization' | 'Practitioner' | 'RelatedPerson'>;
}
/** Supporting information */
export interface ExplanationOfBenefitSupportingInfo extends BackboneElement {
    /** Classification of the supplied information */
    category: CodeableConcept;
    _sequence?: Element;
    _valueBoolean?: Element;
    valueReference?: Reference;
    _valueString?: Element;
    valueQuantity?: Quantity;
    timingPeriod?: Period;
    valueString?: string;
    valueBoolean?: boolean;
    /** Explanation for the information */
    reason?: Coding;
    /** Information instance identifier */
    sequence: positiveInt;
    /** Type of information */
    code?: CodeableConcept;
    timingDate?: date;
    valueAttachment?: Attachment;
    _timingDate?: Element;
}
/** claim | preauthorization | predetermination */
export declare enum ExplanationOfBenefitUse {
    Claim = "claim",
    Preauthorization = "preauthorization",
    Predetermination = "predetermination"
}
/** display | print | printoper */
export declare enum ExplanationOfBenefitProcessnoteType {
    Display = "display",
    Print = "print",
    Printoper = "printoper"
}
/** Payment Details */
export interface ExplanationOfBenefitPayment extends BackboneElement {
    /** Partial or complete payment */
    type?: CodeableConcept;
    /** Payment adjustment for non-claim issues */
    adjustment?: Money;
    /** Explanation for the variance */
    adjustmentReason?: CodeableConcept;
    /** Expected date of payment */
    date?: date;
    _date?: Element;
    /** Payable amount after adjustment */
    amount?: Money;
    /** Business identifier for the payment */
    identifier?: Identifier;
}
