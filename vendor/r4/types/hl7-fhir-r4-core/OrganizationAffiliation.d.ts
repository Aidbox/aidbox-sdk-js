/** GENERATED BY zen-cli
DON'T MODIFY MANUALLY */
import { Period } from "./Period";
import { CodeableConcept } from "./CodeableConcept";
import { ContactPoint } from "./ContactPoint";
import { DomainResource } from "./DomainResource";
import { Element } from "./Element";
import { Reference } from "./Reference";
import { Identifier } from "./Identifier";
/** Defines an affiliation/assotiation/relationship between 2 distinct oganizations, that is not a part-of relationship/sub-division relationship. */
export interface OrganizationAffiliation extends DomainResource {
    resourceType: 'OrganizationAffiliation';
    _active?: Element;
    /** Specific specialty of the participatingOrganization in the context of the role */
    specialty?: Array<CodeableConcept>;
    /** Organization where the role is available */
    organization?: Reference<'Organization'>;
    /** Organization that provides/performs the role (e.g. providing services or is a member of) */
    participatingOrganization?: Reference<'Organization'>;
    /** Whether this organization affiliation record is in active use */
    active?: boolean;
    /** Definition of the role the participatingOrganization plays */
    code?: Array<CodeableConcept>;
    /** Business identifiers that are specific to this role */
    identifier?: Array<Identifier>;
    /** Contact details at the participatingOrganization relevant to this Affiliation */
    telecom?: Array<ContactPoint>;
    /** Health insurance provider network in which the participatingOrganization provides the role's services (if defined) at the indicated locations (if defined) */
    network?: Array<Reference>;
    /** The period during which the participatingOrganization is affiliated with the primary organization */
    period?: Period;
    /** The location(s) at which the role occurs */
    location?: Array<Reference>;
    /** Technical endpoints providing access to services operated for this role */
    endpoint?: Array<Reference>;
    /** Healthcare services provided through the role */
    healthcareService?: Array<Reference>;
}
