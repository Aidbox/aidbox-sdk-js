/** GENERATED BY zen-cli
DON'T MODIFY MANUALLY */
import { UsageContext } from "./UsageContext";
import { ContactDetail } from "./ContactDetail";
import { CodeableConcept } from "./CodeableConcept";
import { uri } from "./uri";
import { dateTime } from "./dateTime";
import { canonical } from "./canonical";
import { integer } from "./integer";
import { DomainResource } from "./DomainResource";
import { markdown } from "./markdown";
import { Element } from "./Element";
import { code } from "./code";
import { BackboneElement } from "./BackboneElement";
/** A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction). */
export interface OperationDefinition extends DomainResource {
    _base?: Element;
    /** Natural language description of the operation definition */
    description?: markdown;
    _code?: Element;
    _kind?: Element;
    /** Date last changed */
    date?: dateTime;
    /** Invoke at the system level? */
    system: boolean;
    /** Name of the publisher (organization or individual) */
    publisher?: string;
    /** Invoke on an instance? */
    instance: boolean;
    /** Intended jurisdiction for operation definition (if applicable) */
    jurisdiction?: Array<CodeableConcept>;
    _publisher?: Element;
    /** Why this operation definition is defined */
    purpose?: markdown;
    _date?: Element;
    /** Name for this operation definition (computer friendly) */
    name: string;
    _outputProfile?: Element;
    _type?: Element;
    _status?: Element;
    _experimental?: Element;
    /** The context that the content is intended to support */
    useContext?: Array<UsageContext>;
    /** Invoke at the type level? */
    type: boolean;
    /** Define overloaded variants for when  generating code */
    overload?: Array<OperationDefinitionOverload>;
    /** For testing purposes, not real usage */
    experimental?: boolean;
    /** Validation information for out parameters */
    outputProfile?: canonical;
    /** Name for this operation definition (human friendly) */
    title?: string;
    _description?: Element;
    _purpose?: Element;
    _resource?: Array<Element>;
    /** draft | active | retired | unknown */
    status: code;
    /** Types this operation applies to */
    resource?: Array<code>;
    /** Whether content is changed by the operation */
    affectsState?: boolean;
    /** operation | query */
    kind: code;
    /** Additional information about use */
    comment?: markdown;
    _name?: Element;
    /** Canonical identifier for this operation definition, represented as a URI (globally unique) */
    url?: uri;
    /** Name used to invoke the operation */
    code: code;
    _title?: Element;
    _instance?: Element;
    _system?: Element;
    /** Marks this as a profile of the base */
    base?: canonical;
    /** Business version of the operation definition */
    version?: string;
    _version?: Element;
    _inputProfile?: Element;
    /** Contact details for the publisher */
    contact?: Array<ContactDetail>;
    /** Validation information for in parameters */
    inputProfile?: canonical;
    _comment?: Element;
    _affectsState?: Element;
    parameter?: Array<OperationDefinitionParameter>;
    _url?: Element;
}
/** Define overloaded variants for when  generating code */
export interface OperationDefinitionOverload extends BackboneElement {
    /** Name of parameter to include in overload */
    parameterName?: Array<string>;
    _parameterName?: Array<Element>;
    /** Comments to go on overload */
    comment?: string;
    _comment?: Element;
}
/** References to this parameter */
export interface OperationDefinitionParameterReferencedFrom extends BackboneElement {
    /** Referencing parameter */
    source: string;
    _source?: Element;
    /** Element id of reference */
    sourceId?: string;
    _sourceId?: Element;
}
/** ValueSet details if this is coded */
export interface OperationDefinitionParameterBinding extends BackboneElement {
    /** required | extensible | preferred | example */
    strength: code;
    _strength?: Element;
    /** Source of value set */
    valueSet: canonical;
    _valueSet?: Element;
}
/** Parameters for the operation/query */
export interface OperationDefinitionParameter extends BackboneElement {
    /** Minimum Cardinality */
    min: integer;
    _documentation?: Element;
    _searchType?: Element;
    /** number | date | string | token | reference | composite | quantity | uri | special */
    searchType?: code;
    /** in | out */
    use: code;
    /** Name in Parameters.parameter.name or in URL */
    name: code;
    /** Parts of a nested Parameter */
    part?: Array<OperationDefinitionParameter>;
    _type?: Element;
    /** What type this parameter has */
    type?: code;
    /** References to this parameter */
    referencedFrom?: Array<OperationDefinitionParameterReferencedFrom>;
    /** Description of meaning/use */
    documentation?: string;
    _min?: Element;
    /** ValueSet details if this is coded */
    binding?: OperationDefinitionParameterBinding;
    /** Maximum Cardinality (a number or *) */
    max: string;
    _name?: Element;
    /** If type is Reference | canonical, allowed targets */
    targetProfile?: Array<canonical>;
    _max?: Element;
    _targetProfile?: Array<Element>;
    _use?: Element;
}
