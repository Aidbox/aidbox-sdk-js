/** GENERATED BY zen-cli
DON'T MODIFY MANUALLY */
import { positiveInt } from "./positiveInt";
import { Period } from "./Period";
import { CodeableConcept } from "./CodeableConcept";
import { Quantity } from "./Quantity";
import { DomainResource } from "./DomainResource";
import { Money } from "./Money";
import { Element } from "./Element";
import { Reference } from "./Reference";
import { code } from "./code";
import { Identifier } from "./Identifier";
import { BackboneElement } from "./BackboneElement";
/** Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment. */
export interface Coverage extends DomainResource {
    _order?: Element;
    /** Owner of the policy */
    policyHolder?: Reference<"Patient" | "Organization" | "RelatedPerson">;
    /** Plan beneficiary */
    beneficiary: Reference<"Patient">;
    /** Contract details */
    contract?: Array<Reference>;
    _status?: Element;
    /** Beneficiary relationship to the subscriber */
    relationship?: CodeableConcept;
    /** Coverage category such as medical or accident */
    type?: CodeableConcept;
    /** Patient payments for services/products */
    costToBeneficiary?: Array<CoverageCostToBeneficiary>;
    /** Reimbursement to insurer */
    subrogation?: boolean;
    /** Subscriber to the policy */
    subscriber?: Reference<"Patient" | "RelatedPerson">;
    /** Issuer of the policy */
    payor: Array<Reference>;
    /** active | cancelled | draft | entered-in-error */
    status: code;
    /** Additional coverage classifications */
    class?: Array<CoverageClass>;
    /** Business Identifier for the coverage */
    identifier?: Array<Identifier>;
    /** Relative order of the coverage */
    order?: positiveInt;
    /** Insurer network */
    network?: string;
    /** Coverage start and end dates */
    period?: Period;
    _network?: Element;
    /** Dependent number */
    dependent?: string;
    _subscriberId?: Element;
    _dependent?: Element;
    _subrogation?: Element;
    /** ID assigned to the subscriber */
    subscriberId?: string;
}
/** Exceptions for patient payments */
export interface CoverageException extends BackboneElement {
    /** Exception category */
    type: CodeableConcept;
    /** The effective period of the exception */
    period?: Period;
}
/** Patient payments for services/products */
export interface CoverageCostToBeneficiary extends BackboneElement {
    /** Cost category */
    type?: CodeableConcept;
    valueQuantity: Quantity;
    valueMoney: Money;
    /** Exceptions for patient payments */
    exception?: Array<CoverageException>;
}
/** Additional coverage classifications */
export interface CoverageClass extends BackboneElement {
    /** Type of class such as 'group' or 'plan' */
    type: CodeableConcept;
    /** Value associated with the type */
    value: string;
    _value?: Element;
    /** Human readable description of the type and value */
    name?: string;
    _name?: Element;
}
