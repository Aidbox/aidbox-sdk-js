/** GENERATED BY zen-cli
DON'T MODIFY MANUALLY */
import { Annotation } from "./Annotation";
import { positiveInt } from "./positiveInt";
import { CodeableConcept } from "./CodeableConcept";
import { SimpleQuantity } from "./SimpleQuantity";
import { uri } from "./uri";
import { dateTime } from "./dateTime";
import { DomainResource } from "./DomainResource";
import { date } from "./date";
import { Element } from "./Element";
import { Reference } from "./Reference";
import { code } from "./code";
import { Identifier } from "./Identifier";
import { BackboneElement } from "./BackboneElement";
/** Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party. */
export interface Immunization extends DomainResource {
    /** Who was immunized */
    patient: Reference<"Patient">;
    /** Dose potency */
    isSubpotent?: boolean;
    /** Indicates the source of a secondarily reported record */
    reportOrigin?: CodeableConcept;
    /** Protocol followed by the provider */
    protocolApplied?: Array<ImmunizationProtocolApplied>;
    /** Body site vaccine  was administered */
    site?: CodeableConcept;
    _isSubpotent?: Element;
    /** Encounter immunization was part of */
    encounter?: Reference<"Encounter">;
    /** Vaccine product administered */
    vaccineCode: CodeableConcept;
    /** Amount of vaccine administered */
    doseQuantity?: SimpleQuantity;
    _status?: Element;
    /** Why immunization occurred */
    reasonCode?: Array<CodeableConcept>;
    /** Reason not done */
    statusReason?: CodeableConcept;
    /** How vaccine entered body */
    route?: CodeableConcept;
    /** When the immunization was first captured in the subject's record */
    recorded?: dateTime;
    _expirationDate?: Element;
    /** Patient eligibility for a vaccination program */
    programEligibility?: Array<CodeableConcept>;
    /** Additional immunization notes */
    note?: Array<Annotation>;
    /** Indicates context the data was recorded in */
    primarySource?: boolean;
    /** completed | entered-in-error | not-done */
    status: code;
    /** Vaccine lot number */
    lotNumber?: string;
    /** Business identifier */
    identifier?: Array<Identifier>;
    /** Vaccine manufacturer */
    manufacturer?: Reference<"Organization">;
    /** Educational material presented to patient */
    education?: Array<ImmunizationEducation>;
    _primarySource?: Element;
    occurrenceString: string;
    _recorded?: Element;
    _lotNumber?: Element;
    /** Details of a reaction that follows immunization */
    reaction?: Array<ImmunizationReaction>;
    /** Where immunization occurred */
    location?: Reference<"Location">;
    occurrenceDateTime: dateTime;
    _occurrenceString: Element;
    /** Funding source for the vaccine */
    fundingSource?: CodeableConcept;
    /** Reason for being subpotent */
    subpotentReason?: Array<CodeableConcept>;
    /** Vaccine expiration date */
    expirationDate?: date;
    /** Who performed event */
    performer?: Array<ImmunizationPerformer>;
    /** Why immunization occurred */
    reasonReference?: Array<Reference>;
    _occurrenceDateTime: Element;
}
/** Protocol followed by the provider */
export interface ImmunizationProtocolApplied extends BackboneElement {
    seriesDosesPositiveInt?: positiveInt;
    doseNumberPositiveInt: positiveInt;
    _doseNumberString: Element;
    /** Name of vaccine series */
    series?: string;
    /** Who is responsible for publishing the recommendations */
    authority?: Reference<"Organization">;
    _doseNumberPositiveInt: Element;
    doseNumberString: string;
    seriesDosesString?: string;
    _seriesDosesString?: Element;
    /** Vaccine preventatable disease being targetted */
    targetDisease?: Array<CodeableConcept>;
    _series?: Element;
    _seriesDosesPositiveInt?: Element;
}
/** Educational material presented to patient */
export interface ImmunizationEducation extends BackboneElement {
    /** Educational material document identifier */
    documentType?: string;
    _documentType?: Element;
    /** Educational material reference pointer */
    reference?: uri;
    _reference?: Element;
    /** Educational material publication date */
    publicationDate?: dateTime;
    _publicationDate?: Element;
    /** Educational material presentation date */
    presentationDate?: dateTime;
    _presentationDate?: Element;
}
/** Details of a reaction that follows immunization */
export interface ImmunizationReaction extends BackboneElement {
    /** When reaction started */
    date?: dateTime;
    _date?: Element;
    /** Additional information on reaction */
    detail?: Reference<"Observation">;
    /** Indicates self-reported reaction */
    reported?: boolean;
    _reported?: Element;
}
/** Who performed event */
export interface ImmunizationPerformer extends BackboneElement {
    /** What type of performance was done */
    function?: CodeableConcept;
    /** Individual or organization who was performing */
    actor: Reference<"PractitionerRole" | "Organization" | "Practitioner">;
}
