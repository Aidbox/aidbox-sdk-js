/** GENERATED BY zen-cli
DON'T MODIFY MANUALLY */
import { Annotation } from "./Annotation";
import { CodeableConcept } from "./CodeableConcept";
import { dateTime } from "./dateTime";
import { DomainResource } from "./DomainResource";
import { Element } from "./Element";
import { Reference } from "./Reference";
import { code } from "./code";
import { Identifier } from "./Identifier";
import { BackboneElement } from "./BackboneElement";
/** A list is a curated collection of resources. */
export interface List extends DomainResource {
    /** When the list was prepared */
    date?: dateTime;
    /** Context in which list created */
    encounter?: Reference<"Encounter">;
    _date?: Element;
    /** What order the list has */
    orderedBy?: CodeableConcept;
    _status?: Element;
    /** working | snapshot | changes */
    mode: code;
    /** Who and/or what defined the list contents (aka Author) */
    source?: Reference<"Patient" | "PractitionerRole" | "Device" | "Practitioner">;
    /** Descriptive name for the list */
    title?: string;
    /** Comments about the list */
    note?: Array<Annotation>;
    /** Why list is empty */
    emptyReason?: CodeableConcept;
    /** current | retired | entered-in-error */
    status: code;
    /** What the purpose of this list is */
    code?: CodeableConcept;
    /** Business identifier */
    identifier?: Array<Identifier>;
    /** Entries in the list */
    entry?: Array<ListEntry>;
    _title?: Element;
    _mode?: Element;
    /** If all resources have the same subject */
    subject?: Reference<"Patient" | "Device" | "Location" | "Group">;
}
/** Entries in the list */
export interface ListEntry extends BackboneElement {
    /** Status/Workflow information about this item */
    flag?: CodeableConcept;
    /** If this item is actually marked as deleted */
    deleted?: boolean;
    _deleted?: Element;
    /** When item added to list */
    date?: dateTime;
    _date?: Element;
    /** Actual entry */
    item: Reference;
}
