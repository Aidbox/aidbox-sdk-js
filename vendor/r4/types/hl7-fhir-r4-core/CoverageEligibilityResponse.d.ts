/** GENERATED BY zen-cli
DON'T MODIFY MANUALLY */
import { unsignedInt } from "./unsignedInt";
import { Period } from "./Period";
import { CodeableConcept } from "./CodeableConcept";
import { uri } from "./uri";
import { dateTime } from "./dateTime";
import { DomainResource } from "./DomainResource";
import { Money } from "./Money";
import { date } from "./date";
import { Element } from "./Element";
import { Reference } from "./Reference";
import { code } from "./code";
import { Identifier } from "./Identifier";
import { BackboneElement } from "./BackboneElement";
/** This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource. */
export interface CoverageEligibilityResponse extends DomainResource {
    _created?: Element;
    /** Intended recipient of products and services */
    patient: Reference<"Patient">;
    /** Party responsible for the request */
    requestor?: Reference<"PractitionerRole" | "Organization" | "Practitioner">;
    /** Patient insurance information */
    insurance?: Array<CoverageEligibilityResponseInsurance>;
    /** Eligibility request reference */
    request: Reference<"CoverageEligibilityRequest">;
    /** Preauthorization reference */
    preAuthRef?: string;
    _disposition?: Element;
    /** auth-requirements | benefits | discovery | validation */
    purpose: Array<code>;
    _status?: Element;
    /** Response creation date */
    created: dateTime;
    /** queued | complete | error | partial */
    outcome: code;
    _outcome?: Element;
    /** Disposition Message */
    disposition?: string;
    _purpose?: Array<Element>;
    /** Coverage issuer */
    insurer: Reference<"Organization">;
    /** active | cancelled | draft | entered-in-error */
    status: code;
    servicedDate?: date;
    /** Business Identifier for coverage eligiblity request */
    identifier?: Array<Identifier>;
    /** Processing errors */
    error?: Array<CoverageEligibilityResponseError>;
    /** Printed form identifier */
    form?: CodeableConcept;
    _preAuthRef?: Element;
    _servicedDate?: Element;
    servicedPeriod?: Period;
}
/** Benefit Summary */
export interface CoverageEligibilityResponseBenefit extends BackboneElement {
    usedString?: string;
    allowedMoney?: Money;
    _allowedString?: Element;
    /** Benefit classification */
    type: CodeableConcept;
    _usedString?: Element;
    _allowedUnsignedInt?: Element;
    allowedUnsignedInt?: unsignedInt;
    _usedUnsignedInt?: Element;
    usedUnsignedInt?: unsignedInt;
    allowedString?: string;
    usedMoney?: Money;
}
/** Benefits and authorization details */
export interface CoverageEligibilityResponseItem extends BackboneElement {
    /** Description of the benefit or services covered */
    description?: string;
    /** Benefit classification */
    category?: CodeableConcept;
    /** Authorization required flag */
    authorizationRequired?: boolean;
    /** Product or service billing modifiers */
    modifier?: Array<CodeableConcept>;
    /** Type of required supporting materials */
    authorizationSupporting?: Array<CodeableConcept>;
    /** Individual or family */
    unit?: CodeableConcept;
    /** Excluded from the plan */
    excluded?: boolean;
    /** Short name for the benefit */
    name?: string;
    _authorizationUrl?: Element;
    _description?: Element;
    /** Billing, service, product, or drug code */
    productOrService?: CodeableConcept;
    /** Annual or lifetime */
    term?: CodeableConcept;
    /** Benefit Summary */
    benefit?: Array<CoverageEligibilityResponseBenefit>;
    _name?: Element;
    /** Preauthorization requirements endpoint */
    authorizationUrl?: uri;
    /** In or out of network */
    network?: CodeableConcept;
    _authorizationRequired?: Element;
    /** Performing practitioner */
    provider?: Reference<"PractitionerRole" | "Practitioner">;
    _excluded?: Element;
}
/** Patient insurance information */
export interface CoverageEligibilityResponseInsurance extends BackboneElement {
    /** Insurance information */
    coverage: Reference<"Coverage">;
    /** Coverage inforce indicator */
    inforce?: boolean;
    _inforce?: Element;
    /** When the benefits are applicable */
    benefitPeriod?: Period;
    /** Benefits and authorization details */
    item?: Array<CoverageEligibilityResponseItem>;
}
/** Processing errors */
export interface CoverageEligibilityResponseError extends BackboneElement {
    /** Error code detailing processing issues */
    code: CodeableConcept;
}
