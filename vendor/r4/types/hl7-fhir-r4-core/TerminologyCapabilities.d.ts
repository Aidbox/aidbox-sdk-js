/** GENERATED BY zen-cli
DON'T MODIFY MANUALLY */
import { UsageContext } from "./UsageContext";
import { url } from "./url";
import { ContactDetail } from "./ContactDetail";
import { CodeableConcept } from "./CodeableConcept";
import { uri } from "./uri";
import { dateTime } from "./dateTime";
import { canonical } from "./canonical";
import { DomainResource } from "./DomainResource";
import { markdown } from "./markdown";
import { Element } from "./Element";
import { code } from "./code";
import { BackboneElement } from "./BackboneElement";
/** A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation. */
export interface TerminologyCapabilities extends DomainResource {
    /** Natural language description of the terminology capabilities */
    description?: markdown;
    _kind?: Element;
    /** Date last changed */
    date: dateTime;
    /** Name of the publisher (organization or individual) */
    publisher?: string;
    /** Intended jurisdiction for terminology capabilities (if applicable) */
    jurisdiction?: Array<CodeableConcept>;
    _publisher?: Element;
    /** Why this terminology capabilities is defined */
    purpose?: markdown;
    _lockedDate?: Element;
    _codeSearch?: Element;
    _date?: Element;
    /** Name for this terminology capabilities (computer friendly) */
    name?: string;
    _status?: Element;
    _experimental?: Element;
    /** The context that the content is intended to support */
    useContext?: Array<UsageContext>;
    /** Use and/or publishing restrictions */
    copyright?: markdown;
    /** For testing purposes, not real usage */
    experimental?: boolean;
    /** Information about the [ValueSet/$expand](valueset-operation-expand.html) operation */
    expansion?: TerminologyCapabilitiesExpansion;
    /** Name for this terminology capabilities (human friendly) */
    title?: string;
    _description?: Element;
    _purpose?: Element;
    /** draft | active | retired | unknown */
    status: code;
    /** Information about the [ValueSet/$validate-code](valueset-operation-validate-code.html) operation */
    validateCode?: TerminologyCapabilitiesValidateCode;
    /** instance | capability | requirements */
    kind: code;
    _name?: Element;
    /** Information about the [ConceptMap/$translate](conceptmap-operation-translate.html) operation */
    translation?: TerminologyCapabilitiesTranslation;
    /** Canonical identifier for this terminology capabilities, represented as a URI (globally unique) */
    url?: uri;
    _copyright?: Element;
    _title?: Element;
    /** A code system supported by the server */
    codeSystem?: Array<TerminologyCapabilitiesCodeSystem>;
    /** Software that is covered by this terminology capability statement */
    software?: TerminologyCapabilitiesSoftware;
    /** Business version of the terminology capabilities */
    version?: string;
    _version?: Element;
    /** Contact details for the publisher */
    contact?: Array<ContactDetail>;
    /** If this describes a specific instance */
    implementation?: TerminologyCapabilitiesImplementation;
    _url?: Element;
    /** explicit | all */
    codeSearch?: code;
    /** Whether lockedDate is supported */
    lockedDate?: boolean;
    /** Information about the [ConceptMap/$closure](conceptmap-operation-closure.html) operation */
    closure?: TerminologyCapabilitiesClosure;
}
/** Information about the [ConceptMap/$translate](conceptmap-operation-translate.html) operation */
export interface TerminologyCapabilitiesTranslation extends BackboneElement {
    /** Whether the client must identify the map */
    needsMap: boolean;
    _needsMap?: Element;
}
/** Information about the [ValueSet/$expand](valueset-operation-expand.html) operation */
export interface TerminologyCapabilitiesExpansion extends BackboneElement {
    /** Whether the server can return nested value sets */
    hierarchical?: boolean;
    _incomplete?: Element;
    _paging?: Element;
    /** Documentation about text searching works */
    textFilter?: markdown;
    /** Allow request for incomplete expansions? */
    incomplete?: boolean;
    /** Whether the server supports paging on expansion */
    paging?: boolean;
    _textFilter?: Element;
    _hierarchical?: Element;
    /** Supported expansion parameter */
    parameter?: Array<TerminologyCapabilitiesParameter>;
}
/** Information about the [ConceptMap/$closure](conceptmap-operation-closure.html) operation */
export interface TerminologyCapabilitiesClosure extends BackboneElement {
    /** If cross-system closure is supported */
    translation?: boolean;
    _translation?: Element;
}
/** Software that is covered by this terminology capability statement */
export interface TerminologyCapabilitiesSoftware extends BackboneElement {
    /** A name the software is known by */
    name: string;
    _name?: Element;
    /** Version covered by this statement */
    version?: string;
    _version?: Element;
}
/** A code system supported by the server */
export interface TerminologyCapabilitiesCodeSystem extends BackboneElement {
    /** URI for the Code System */
    uri?: canonical;
    _uri?: Element;
    /** Version of Code System supported */
    version?: Array<TerminologyCapabilitiesVersion>;
    /** Whether subsumption is supported */
    subsumption?: boolean;
    _subsumption?: Element;
}
/** Filter Properties supported */
export interface TerminologyCapabilitiesFilter extends BackboneElement {
    /** Code of the property supported */
    code: code;
    _code?: Element;
    /** Operations supported for the property */
    op: Array<code>;
    _op?: Array<Element>;
}
/** Supported expansion parameter */
export interface TerminologyCapabilitiesParameter extends BackboneElement {
    /** Expansion Parameter name */
    name: code;
    _name?: Element;
    /** Description of support for parameter */
    documentation?: string;
    _documentation?: Element;
}
/** Version of Code System supported */
export interface TerminologyCapabilitiesVersion extends BackboneElement {
    _code?: Element;
    /** If this is the default version for this code system */
    isDefault?: boolean;
    /** Properties supported for $lookup */
    property?: Array<code>;
    _language?: Array<Element>;
    /** Filter Properties supported */
    filter?: Array<TerminologyCapabilitiesFilter>;
    /** If compositional grammar is supported */
    compositional?: boolean;
    /** Language Displays supported */
    language?: Array<code>;
    _isDefault?: Element;
    /** Version identifier for this version */
    code?: string;
    _compositional?: Element;
    _property?: Array<Element>;
}
/** If this describes a specific instance */
export interface TerminologyCapabilitiesImplementation extends BackboneElement {
    /** Describes this specific instance */
    description: string;
    _description?: Element;
    /** Base URL for the implementation */
    url?: url;
    _url?: Element;
}
/** Information about the [ValueSet/$validate-code](valueset-operation-validate-code.html) operation */
export interface TerminologyCapabilitiesValidateCode extends BackboneElement {
    /** Whether translations are validated */
    translations: boolean;
    _translations?: Element;
}
