/** GENERATED BY zen-cli
DON'T MODIFY MANUALLY */
import { Address } from "./Address";
import { UsageContext } from "./UsageContext";
import { Annotation } from "./Annotation";
import { Age } from "./Age";
import { Attachment } from "./Attachment";
import { positiveInt } from "./positiveInt";
import { unsignedInt } from "./unsignedInt";
import { Period } from "./Period";
import { url } from "./url";
import { ContactDetail } from "./ContactDetail";
import { DataRequirement } from "./DataRequirement";
import { CodeableConcept } from "./CodeableConcept";
import { TriggerDefinition } from "./TriggerDefinition";
import { uri } from "./uri";
import { Count } from "./Count";
import { Expression } from "./Expression";
import { Coding } from "./Coding";
import { id } from "./id";
import { dateTime } from "./dateTime";
import { Dosage } from "./Dosage";
import { Range } from "./Range";
import { oid } from "./oid";
import { ContactPoint } from "./ContactPoint";
import { uuid } from "./uuid";
import { Signature } from "./Signature";
import { RelatedArtifact } from "./RelatedArtifact";
import { Timing } from "./Timing";
import { Meta } from "./Meta";
import { Quantity } from "./Quantity";
import { Distance } from "./Distance";
import { canonical } from "./canonical";
import { HumanName } from "./HumanName";
import { Duration } from "./Duration";
import { time } from "./time";
import { integer } from "./integer";
import { Money } from "./Money";
import { SampledData } from "./SampledData";
import { date } from "./date";
import { Ratio } from "./Ratio";
import { markdown } from "./markdown";
import { Resource } from "./Resource";
import { ParameterDefinition } from "./ParameterDefinition";
import { base64Binary } from "./base64Binary";
import { instant } from "./instant";
import { Element } from "./Element";
import { Reference } from "./Reference";
import { code } from "./code";
import { Identifier } from "./Identifier";
import { BackboneElement } from "./BackboneElement";
import { decimal } from "./decimal";
import { Contributor } from "./Contributor";
/** This resource is a non-persisted resource used to pass information into and back from an [operation](operations.html). It has no other use, and there is no RESTful endpoint associated with it. */
export interface Parameters extends Resource {
    resourceType: 'Parameters';
    parameter?: Array<ParametersParameter>;
}
/** Operation Parameter */
export interface ParametersParameter extends BackboneElement {
    valueBase64Binary?: base64Binary;
    _valueUri?: Element;
    valueAge?: Age;
    valueParameterDefinition?: ParameterDefinition;
    valueTiming?: Timing;
    valueCode?: code;
    _valueBoolean?: Element;
    valueReference?: Reference;
    _valueBase64Binary?: Element;
    valueContributor?: Contributor;
    valueContactDetail?: ContactDetail;
    _valueId?: Element;
    _valueUnsignedInt?: Element;
    _valueUrl?: Element;
    valueUri?: uri;
    valueUsageContext?: UsageContext;
    valueTime?: time;
    valueDecimal?: decimal;
    _valueDecimal?: Element;
    valueCanonical?: canonical;
    /** Name from the definition */
    name: string;
    valueMarkdown?: markdown;
    valueIdentifier?: Identifier;
    _valueString?: Element;
    valueTriggerDefinition?: TriggerDefinition;
    valueQuantity?: Quantity;
    /** Named part of a multi-part parameter */
    part?: Array<ParametersParameter>;
    valueCount?: Count;
    valueString?: string;
    _valueUuid?: Element;
    valueRatio?: Ratio;
    valueBoolean?: boolean;
    valueInstant?: instant;
    valueDateTime?: dateTime;
    valueDate?: date;
    valueDuration?: Duration;
    valueDataRequirement?: DataRequirement;
    valueMeta?: Meta;
    _valueCanonical?: Element;
    valueMoney?: Money;
    valueCoding?: Coding;
    _valuePositiveInt?: Element;
    valueExpression?: Expression;
    _valueDateTime?: Element;
    valueSampledData?: SampledData;
    _valueTime?: Element;
    /** If parameter is a whole resource */
    resource?: Resource;
    valueDosage?: Dosage;
    _name?: Element;
    valueContactPoint?: ContactPoint;
    valueCodeableConcept?: CodeableConcept;
    _valueInstant?: Element;
    _valueDate?: Element;
    valueAnnotation?: Annotation;
    valuePeriod?: Period;
    _valueMarkdown?: Element;
    _valueOid?: Element;
    valueDistance?: Distance;
    valueRange?: Range;
    valueSignature?: Signature;
    valueUuid?: uuid;
    valueInteger?: integer;
    _valueCode?: Element;
    valueHumanName?: HumanName;
    valueUnsignedInt?: unsignedInt;
    valueAttachment?: Attachment;
    valueOid?: oid;
    valueAddress?: Address;
    valueRelatedArtifact?: RelatedArtifact;
    valuePositiveInt?: positiveInt;
    valueId?: id;
    valueUrl?: url;
    _valueInteger?: Element;
}
