/** GENERATED BY zen-cli
DON'T MODIFY MANUALLY */
import { UsageContext } from "./UsageContext";
import { Period } from "./Period";
import { ContactDetail } from "./ContactDetail";
import { CodeableConcept } from "./CodeableConcept";
import { uri } from "./uri";
import { Expression } from "./Expression";
import { dateTime } from "./dateTime";
import { RelatedArtifact } from "./RelatedArtifact";
import { canonical } from "./canonical";
import { DomainResource } from "./DomainResource";
import { date } from "./date";
import { markdown } from "./markdown";
import { Element } from "./Element";
import { Reference } from "./Reference";
import { Identifier } from "./Identifier";
import { BackboneElement } from "./BackboneElement";
/** The Measure resource provides the definition of a quality measure. */
export interface Measure extends DomainResource {
    resourceType: 'Measure';
    /** Natural language description of the measure */
    description?: markdown;
    _riskAdjustment?: Element;
    _usage?: Element;
    /** Defined terms used in the measure documentation */
    definition?: Array<markdown>;
    _rateAggregation?: Element;
    /** Date last changed */
    date?: dateTime;
    /** Population criteria group */
    group?: Array<MeasureGroup>;
    /** Who endorsed the content */
    endorser?: Array<ContactDetail>;
    /** Name of the publisher (organization or individual) */
    publisher?: string;
    /** When the measure was approved by publisher */
    approvalDate?: date;
    /** opportunity | all-or-nothing | linear | weighted */
    compositeScoring?: CodeableConcept;
    /** Disclaimer for use of the measure or its referenced content */
    disclaimer?: markdown;
    /** Intended jurisdiction for measure (if applicable) */
    jurisdiction?: Array<CodeableConcept>;
    _publisher?: Element;
    /** Why this measure is defined */
    purpose?: markdown;
    _date?: Element;
    subjectCodeableConcept?: CodeableConcept;
    /** Name for this measure (computer friendly) */
    name?: string;
    _definition?: Array<Element>;
    _status?: Element;
    _experimental?: Element;
    /** The context that the content is intended to support */
    useContext?: Array<UsageContext>;
    /** Use and/or publishing restrictions */
    copyright?: markdown;
    _clinicalRecommendationStatement?: Element;
    /** Additional guidance for implementers */
    guidance?: markdown;
    _approvalDate?: Element;
    /** process | outcome | structure | patient-reported-outcome | composite */
    type?: Array<CodeableConcept>;
    /** For testing purposes, not real usage */
    experimental?: boolean;
    /** The category of the measure, such as Education, Treatment, Assessment, etc. */
    topic?: Array<CodeableConcept>;
    /** Name for this measure (human friendly) */
    title?: string;
    _description?: Element;
    /** What other data should be reported with the measure */
    supplementalData?: Array<MeasureSupplementalData>;
    /** Logic used by the measure */
    library?: Array<canonical>;
    /** Who authored the content */
    author?: Array<ContactDetail>;
    _purpose?: Element;
    /** Describes the clinical usage of the measure */
    usage?: string;
    /** Detailed description of why the measure exists */
    rationale?: markdown;
    _lastReviewDate?: Element;
    /** draft | active | retired | unknown */
    status: `${MeasureStatus}`;
    _rationale?: Element;
    /** Subordinate title of the measure */
    subtitle?: string;
    _name?: Element;
    /** Canonical identifier for this measure, represented as a URI (globally unique) */
    url?: uri;
    /** Additional identifier for the measure */
    identifier?: Array<Identifier>;
    /** When the measure was last reviewed */
    lastReviewDate?: date;
    /** Who edited the content */
    editor?: Array<ContactDetail>;
    _subtitle?: Element;
    _library?: Array<Element>;
    _copyright?: Element;
    /** How risk adjustment is applied for this measure */
    riskAdjustment?: string;
    /** proportion | ratio | continuous-variable | cohort */
    scoring?: CodeableConcept;
    _title?: Element;
    /** Who reviewed the content */
    reviewer?: Array<ContactDetail>;
    /** Business version of the measure */
    version?: string;
    _version?: Element;
    /** Additional documentation, citations, etc. */
    relatedArtifact?: Array<RelatedArtifact>;
    /** Contact details for the publisher */
    contact?: Array<ContactDetail>;
    subjectReference?: Reference<'Group'>;
    /** increase | decrease */
    improvementNotation?: `${MeasureImprovementNotation}`;
    _url?: Element;
    _disclaimer?: Element;
    /** How is rate aggregation performed for this measure */
    rateAggregation?: string;
    /** When the measure is expected to be used */
    effectivePeriod?: Period;
    /** Summary of clinical guidelines */
    clinicalRecommendationStatement?: markdown;
    _guidance?: Element;
}
/** Population criteria */
export interface MeasurePopulation extends BackboneElement {
    /** initial-population | numerator | numerator-exclusion | denominator | denominator-exclusion | denominator-exception | measure-population | measure-population-exclusion | measure-observation */
    code?: CodeableConcept;
    /** The human readable description of this population criteria */
    description?: string;
    _description?: Element;
    /** The criteria that defines this population */
    criteria: Expression;
}
/** Stratifier criteria component for the measure */
export interface MeasureComponent extends BackboneElement {
    /** Meaning of the stratifier component */
    code?: CodeableConcept;
    /** The human readable description of this stratifier component */
    description?: string;
    _description?: Element;
    /** Component of how the measure should be stratified */
    criteria: Expression;
}
/** Stratifier criteria for the measure */
export interface MeasureStratifier extends BackboneElement {
    /** Meaning of the stratifier */
    code?: CodeableConcept;
    /** The human readable description of this stratifier */
    description?: string;
    _description?: Element;
    /** How the measure should be stratified */
    criteria?: Expression;
    /** Stratifier criteria component for the measure */
    component?: Array<MeasureComponent>;
}
/** Population criteria group */
export interface MeasureGroup extends BackboneElement {
    /** Meaning of the group */
    code?: CodeableConcept;
    /** Summary description */
    description?: string;
    _description?: Element;
    /** Population criteria */
    population?: Array<MeasurePopulation>;
    /** Stratifier criteria for the measure */
    stratifier?: Array<MeasureStratifier>;
}
/** What other data should be reported with the measure */
export interface MeasureSupplementalData extends BackboneElement {
    /** Meaning of the supplemental data */
    code?: CodeableConcept;
    /** supplemental-data | risk-adjustment-factor */
    usage?: Array<CodeableConcept>;
    /** The human readable description of this supplemental data */
    description?: string;
    _description?: Element;
    /** Expression describing additional data to be reported */
    criteria: Expression;
}
/** draft | active | retired | unknown */
export declare enum MeasureStatus {
    Active = "active",
    Draft = "draft",
    Retired = "retired",
    Unknown = "unknown"
}
/** increase | decrease */
export declare enum MeasureImprovementNotation {
    Decrease = "decrease",
    Increase = "increase"
}
