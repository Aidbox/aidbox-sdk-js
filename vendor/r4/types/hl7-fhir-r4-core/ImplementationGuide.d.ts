/** GENERATED BY zen-cli
DON'T MODIFY MANUALLY */
import { UsageContext } from "./UsageContext";
import { url } from "./url";
import { ContactDetail } from "./ContactDetail";
import { CodeableConcept } from "./CodeableConcept";
import { uri } from "./uri";
import { id } from "./id";
import { dateTime } from "./dateTime";
import { canonical } from "./canonical";
import { DomainResource } from "./DomainResource";
import { markdown } from "./markdown";
import { Element } from "./Element";
import { Reference } from "./Reference";
import { code } from "./code";
import { BackboneElement } from "./BackboneElement";
/** A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts. */
export interface ImplementationGuide extends DomainResource {
    /** Natural language description of the implementation guide */
    description?: markdown;
    /** Information needed to build the IG */
    definition?: ImplementationGuideDefinition;
    _license?: Element;
    /** Date last changed */
    date?: dateTime;
    /** Name of the publisher (organization or individual) */
    publisher?: string;
    /** FHIR Version(s) this Implementation Guide targets */
    fhirVersion: Array<code>;
    /** SPDX license code for this IG (or not-open-source) */
    license?: code;
    /** Intended jurisdiction for implementation guide (if applicable) */
    jurisdiction?: Array<CodeableConcept>;
    _publisher?: Element;
    /** Profiles that apply globally */
    global?: Array<ImplementationGuideGlobal>;
    /** Another Implementation guide this depends on */
    dependsOn?: Array<ImplementationGuideDependsOn>;
    _date?: Element;
    /** Name for this implementation guide (computer friendly) */
    name: string;
    _status?: Element;
    _fhirVersion?: Array<Element>;
    _experimental?: Element;
    /** The context that the content is intended to support */
    useContext?: Array<UsageContext>;
    /** Use and/or publishing restrictions */
    copyright?: markdown;
    /** For testing purposes, not real usage */
    experimental?: boolean;
    /** Information about an assembled IG */
    manifest?: ImplementationGuideManifest;
    /** Name for this implementation guide (human friendly) */
    title?: string;
    _description?: Element;
    /** draft | active | retired | unknown */
    status: code;
    _name?: Element;
    /** Canonical identifier for this implementation guide, represented as a URI (globally unique) */
    url: uri;
    _copyright?: Element;
    _packageId?: Element;
    _title?: Element;
    /** Business version of the implementation guide */
    version?: string;
    _version?: Element;
    /** NPM Package name for IG */
    packageId: id;
    /** Contact details for the publisher */
    contact?: Array<ContactDetail>;
    _url?: Element;
}
/** Grouping used to present related resources in the IG */
export interface ImplementationGuideGrouping extends BackboneElement {
    /** Descriptive name for the package */
    name: string;
    _name?: Element;
    /** Human readable text describing the package */
    description?: string;
    _description?: Element;
}
/** Page/Section in the Guide */
export interface ImplementationGuideDefinitionPage extends BackboneElement {
    _nameUrl: Element;
    /** html | markdown | xml | generated */
    generation: code;
    nameReference: Reference<"Binary">;
    nameUrl: url;
    /** Nested Pages / Sections */
    page?: Array<ImplementationGuideDefinitionPage>;
    /** Short title shown for navigational assistance */
    title: string;
    _generation?: Element;
    _title?: Element;
}
/** Resource in the implementation guide */
export interface ImplementationGuideResource extends BackboneElement {
    _exampleCanonical?: Element;
    /** Reason why included in guide */
    description?: string;
    /** Versions this applies to (if different to IG) */
    fhirVersion?: Array<code>;
    /** Grouping this is part of */
    groupingId?: id;
    /** Human Name for the resource */
    name?: string;
    _exampleBoolean?: Element;
    _fhirVersion?: Array<Element>;
    exampleCanonical?: canonical;
    _description?: Element;
    _groupingId?: Element;
    /** Location of the resource */
    reference: Reference;
    exampleBoolean?: boolean;
    _name?: Element;
}
/** Information about an assembled IG */
export interface ImplementationGuideManifest extends BackboneElement {
    /** Location of rendered implementation guide */
    rendering?: url;
    _rendering?: Element;
    /** Resource in the implementation guide */
    resource: Array<ImplementationGuideResource>;
    /** HTML page within the parent IG */
    page?: Array<ImplementationGuidePage>;
    /** Image within the IG */
    image?: Array<string>;
    _image?: Array<Element>;
    /** Additional linkable file in IG */
    other?: Array<string>;
    _other?: Array<Element>;
}
/** Profiles that apply globally */
export interface ImplementationGuideGlobal extends BackboneElement {
    /** Type this profile applies to */
    type: code;
    _type?: Element;
    /** Profile that all resources must conform to */
    profile: canonical;
    _profile?: Element;
}
/** A template for building resources */
export interface ImplementationGuideTemplate extends BackboneElement {
    /** Type of template specified */
    code: code;
    _code?: Element;
    /** The source location for the template */
    source: string;
    _source?: Element;
    /** The scope in which the template applies */
    scope?: string;
    _scope?: Element;
}
/** Information needed to build the IG */
export interface ImplementationGuideDefinition extends BackboneElement {
    /** Grouping used to present related resources in the IG */
    grouping?: Array<ImplementationGuideGrouping>;
    /** Resource in the implementation guide */
    resource: Array<ImplementationGuideResource>;
    page?: ImplementationGuideDefinitionPage;
    /** Defines how IG is built by tools */
    parameter?: Array<ImplementationGuideParameter>;
    /** A template for building resources */
    template?: Array<ImplementationGuideTemplate>;
}
/** Defines how IG is built by tools */
export interface ImplementationGuideParameter extends BackboneElement {
    /** apply | path-resource | path-pages | path-tx-cache | expansion-parameter | rule-broken-links | generate-xml | generate-json | generate-turtle | html-template */
    code: code;
    _code?: Element;
    /** Value for named type */
    value: string;
    _value?: Element;
}
/** Another Implementation guide this depends on */
export interface ImplementationGuideDependsOn extends BackboneElement {
    /** Identity of the IG that this depends on */
    uri: canonical;
    _uri?: Element;
    /** NPM Package name for IG this depends on */
    packageId?: id;
    _packageId?: Element;
    /** Version of the IG */
    version?: string;
    _version?: Element;
}
/** HTML page within the parent IG */
export interface ImplementationGuidePage extends BackboneElement {
    /** HTML page name */
    name: string;
    _name?: Element;
    /** Title of the page, for references */
    title?: string;
    _title?: Element;
    /** Anchor available on the page */
    anchor?: Array<string>;
    _anchor?: Array<Element>;
}
