/** GENERATED BY zen-cli
DON'T MODIFY MANUALLY */
import { Annotation } from "./Annotation";
import { Age } from "./Age";
import { Period } from "./Period";
import { CodeableConcept } from "./CodeableConcept";
import { uri } from "./uri";
import { Expression } from "./Expression";
import { id } from "./id";
import { dateTime } from "./dateTime";
import { Range } from "./Range";
import { RelatedArtifact } from "./RelatedArtifact";
import { Timing } from "./Timing";
import { canonical } from "./canonical";
import { Duration } from "./Duration";
import { DomainResource } from "./DomainResource";
import { Element } from "./Element";
import { Reference } from "./Reference";
import { code } from "./code";
import { Identifier } from "./Identifier";
import { BackboneElement } from "./BackboneElement";
/** A group of related requests that can be used to capture intended activities that have inter-dependencies such as "give this medication after that one". */
export interface RequestGroup extends DomainResource {
    /** Instantiates FHIR protocol or definition */
    instantiatesCanonical?: Array<canonical>;
    /** Instantiates external protocol or definition */
    instantiatesUri?: Array<uri>;
    _authoredOn?: Element;
    /** Created as part of */
    encounter?: Reference<"Encounter">;
    _priority?: Element;
    _status?: Element;
    /** Why the request group is needed */
    reasonCode?: Array<CodeableConcept>;
    /** When the request group was authored */
    authoredOn?: dateTime;
    /** Additional notes about the response */
    note?: Array<Annotation>;
    /** Device or practitioner that authored the request group */
    author?: Reference<"PractitionerRole" | "Device" | "Practitioner">;
    _intent?: Element;
    /** routine | urgent | asap | stat */
    priority?: code;
    /** draft | active | on-hold | revoked | completed | entered-in-error | unknown */
    status: code;
    /** Composite request this is part of */
    groupIdentifier?: Identifier;
    /** What's being requested/ordered */
    code?: CodeableConcept;
    /** Business identifier */
    identifier?: Array<Identifier>;
    /** proposal | plan | directive | order | original-order | reflex-order | filler-order | instance-order | option */
    intent: code;
    action?: Array<RequestGroupAction>;
    /** Request(s) replaced by this request */
    replaces?: Array<Reference>;
    /** Fulfills plan, proposal, or order */
    basedOn?: Array<Reference>;
    _instantiatesCanonical?: Array<Element>;
    /** Who the request group is about */
    subject?: Reference<"Patient" | "Group">;
    /** Why the request group is needed */
    reasonReference?: Array<Reference>;
    _instantiatesUri?: Array<Element>;
}
/** Relationship to another action */
export interface RequestGroupActionRelatedAction extends BackboneElement {
    /** What action this is related to */
    actionId: id;
    _actionId?: Element;
    /** before-start | before | before-end | concurrent-with-start | concurrent | concurrent-with-end | after-start | after | after-end */
    relationship: code;
    _relationship?: Element;
    offsetDuration?: Duration;
    offsetRange?: Range;
}
/** Whether or not the action is applicable */
export interface RequestGroupActionCondition extends BackboneElement {
    /** applicability | start | stop */
    kind: code;
    _kind?: Element;
    /** Boolean-valued expression */
    expression?: Expression;
}
/** Proposed actions, if any */
export interface RequestGroupAction extends BackboneElement {
    _groupingBehavior?: Element;
    timingRange?: Range;
    /** Short description of the action */
    description?: string;
    _precheckBehavior?: Element;
    /** Static text equivalent of the action, used if the dynamic aspects cannot be interpreted by the receiving system */
    textEquivalent?: string;
    _prefix?: Element;
    _requiredBehavior?: Element;
    timingPeriod?: Period;
    /** Relationship to another action */
    relatedAction?: Array<RequestGroupActionRelatedAction>;
    _priority?: Element;
    /** create | update | remove | fire-event */
    type?: CodeableConcept;
    /** Who should perform the action */
    participant?: Array<Reference>;
    /** User-visible title */
    title?: string;
    _description?: Element;
    /** Supporting documentation for the intended performer of the action */
    documentation?: Array<RelatedArtifact>;
    /** User-visible prefix for the action (e.g. 1. or A.) */
    prefix?: string;
    /** any | all | all-or-none | exactly-one | at-most-one | one-or-more */
    selectionBehavior?: code;
    timingDateTime?: dateTime;
    timingTiming?: Timing;
    timingDuration?: Duration;
    /** routine | urgent | asap | stat */
    priority?: code;
    /** must | could | must-unless-documented */
    requiredBehavior?: code;
    /** Whether or not the action is applicable */
    condition?: Array<RequestGroupActionCondition>;
    /** The target of the action */
    resource?: Reference;
    /** visual-group | logical-group | sentence-group */
    groupingBehavior?: code;
    /** Code representing the meaning of the action or sub-actions */
    code?: Array<CodeableConcept>;
    timingAge?: Age;
    _timingDateTime?: Element;
    /** Sub action */
    action?: Array<RequestGroupAction>;
    _selectionBehavior?: Element;
    /** yes | no */
    precheckBehavior?: code;
    _title?: Element;
    _cardinalityBehavior?: Element;
    _textEquivalent?: Element;
    /** single | multiple */
    cardinalityBehavior?: code;
}
