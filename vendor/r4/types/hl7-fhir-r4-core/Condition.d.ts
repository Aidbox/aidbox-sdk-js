/** GENERATED BY zen-cli
DON'T MODIFY MANUALLY */
import { Annotation } from "./Annotation";
import { Age } from "./Age";
import { Period } from "./Period";
import { CodeableConcept } from "./CodeableConcept";
import { dateTime } from "./dateTime";
import { Range } from "./Range";
import { DomainResource } from "./DomainResource";
import { Element } from "./Element";
import { Reference } from "./Reference";
import { Identifier } from "./Identifier";
import { BackboneElement } from "./BackboneElement";
/** A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern. */
export interface Condition extends DomainResource {
    resourceType: 'Condition';
    /** problem-list-item | encounter-diagnosis */
    category?: Array<CodeableConcept>;
    _onsetString?: Element;
    /** active | recurrence | relapse | inactive | remission | resolved */
    clinicalStatus?: `${ConditionClinicalstatus}`;
    abatementAge?: Age;
    onsetRange?: Range;
    onsetAge?: Age;
    /** Stage/grade, usually assessed formally */
    stage?: Array<ConditionStage>;
    _abatementString?: Element;
    /** Encounter created as part of */
    encounter?: Reference<'Encounter'>;
    /** Supporting evidence */
    evidence?: Array<ConditionEvidence>;
    onsetPeriod?: Period;
    abatementPeriod?: Period;
    /** Person who asserts this condition */
    asserter?: Reference<'Patient' | 'PractitionerRole' | 'Practitioner' | 'RelatedPerson'>;
    /** Additional information about the Condition */
    note?: Array<Annotation>;
    abatementString?: string;
    _abatementDateTime?: Element;
    abatementRange?: Range;
    /** Date record was first recorded */
    recordedDate?: dateTime;
    _recordedDate?: Element;
    onsetString?: string;
    /** Who recorded the condition */
    recorder?: Reference<'Patient' | 'PractitionerRole' | 'Practitioner' | 'RelatedPerson'>;
    /** Subjective severity of condition */
    severity?: CodeableConcept;
    /** Identification of the condition, problem or diagnosis */
    code?: CodeableConcept;
    /** External Ids for this condition */
    identifier?: Array<Identifier>;
    onsetDateTime?: dateTime;
    /** Anatomical location, if relevant */
    bodySite?: Array<CodeableConcept>;
    abatementDateTime?: dateTime;
    _onsetDateTime?: Element;
    /** unconfirmed | provisional | differential | confirmed | refuted | entered-in-error */
    verificationStatus?: `${ConditionVerificationstatus}`;
    /** Who has the condition? */
    subject: Reference<'Patient' | 'Group'>;
}
/** active | recurrence | relapse | inactive | remission | resolved */
export declare enum ConditionClinicalstatus {
    Active = "active",
    Inactive = "inactive",
    Recurrence = "recurrence",
    Relapse = "relapse",
    Remission = "remission",
    Resolved = "resolved",
    Unknown = "unknown"
}
/** Stage/grade, usually assessed formally */
export interface ConditionStage extends BackboneElement {
    /** Simple summary (disease specific) */
    summary?: CodeableConcept;
    /** Formal record of assessment */
    assessment?: Array<Reference>;
    /** Kind of staging */
    type?: CodeableConcept;
}
/** Supporting evidence */
export interface ConditionEvidence extends BackboneElement {
    /** Manifestation/symptom */
    code?: Array<CodeableConcept>;
    /** Supporting information found elsewhere */
    detail?: Array<Reference>;
}
/** unconfirmed | provisional | differential | confirmed | refuted | entered-in-error */
export declare enum ConditionVerificationstatus {
    Confirmed = "confirmed",
    Differential = "differential",
    EnteredInError = "entered-in-error",
    Provisional = "provisional",
    Refuted = "refuted",
    Unconfirmed = "unconfirmed"
}
