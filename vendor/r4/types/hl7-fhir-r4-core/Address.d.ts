/** GENERATED BY zen-cli
DON'T MODIFY MANUALLY */
import { Period } from "./Period";
import { Element } from "./Element";
/** Base StructureDefinition for Address Type: An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world. */
export interface Address extends Element {
    _line?: Array<Element>;
    /** home | work | temp | old | billing - purpose of this address */
    use?: `${AddressUse}`;
    /** Name of city, town etc. */
    city?: string;
    _type?: Element;
    /** postal | physical | both */
    type?: `${AddressType}`;
    _city?: Element;
    /** Sub-unit of country (abbreviations ok) */
    state?: string;
    _district?: Element;
    _state?: Element;
    /** Street name, number, direction & P.O. Box etc. */
    line?: Array<string>;
    /** Postal code for area */
    postalCode?: string;
    _country?: Element;
    _postalCode?: Element;
    _text?: Element;
    /** Time period when address was/is in use */
    period?: Period;
    /** Country (e.g. can be ISO 3166 2 or 3 letter code) */
    country?: string;
    _use?: Element;
    /** District name (aka county) */
    district?: string;
    /** Text representation of the address */
    text?: string;
}
/** home | work | temp | old | billing - purpose of this address */
export declare enum AddressUse {
    Billing = "billing",
    Home = "home",
    Old = "old",
    Temp = "temp",
    Work = "work"
}
/** postal | physical | both */
export declare enum AddressType {
    Both = "both",
    Physical = "physical",
    Postal = "postal"
}
