/** GENERATED BY zen-cli
DON'T MODIFY MANUALLY */
import { Annotation } from "./Annotation";
import { CodeableConcept } from "./CodeableConcept";
import { SimpleQuantity } from "./SimpleQuantity";
import { uri } from "./uri";
import { dateTime } from "./dateTime";
import { Timing } from "./Timing";
import { Quantity } from "./Quantity";
import { canonical } from "./canonical";
import { DomainResource } from "./DomainResource";
import { Ratio } from "./Ratio";
import { Element } from "./Element";
import { Reference } from "./Reference";
import { code } from "./code";
import { Identifier } from "./Identifier";
import { BackboneElement } from "./BackboneElement";
/** A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident. */
export interface NutritionOrder extends DomainResource {
    /** The person who requires the diet, formula or nutritional supplement */
    patient: Reference<"Patient">;
    /** Oral diet components */
    oralDiet?: NutritionOrderOralDiet;
    /** Instantiates FHIR protocol or definition */
    instantiatesCanonical?: Array<canonical>;
    /** Instantiates external protocol or definition */
    instantiatesUri?: Array<uri>;
    /** Instantiates protocol or definition */
    instantiates?: Array<uri>;
    /** The encounter associated with this nutrition order */
    encounter?: Reference<"Encounter">;
    _dateTime?: Element;
    _instantiates?: Array<Element>;
    _status?: Element;
    /** Comments */
    note?: Array<Annotation>;
    /** Date and time the nutrition order was requested */
    dateTime: dateTime;
    /** Enteral formula components */
    enteralFormula?: NutritionOrderEnteralFormula;
    _intent?: Element;
    /** Order-specific modifier about the type of food that should be given */
    foodPreferenceModifier?: Array<CodeableConcept>;
    /** draft | active | on-hold | revoked | completed | entered-in-error | unknown */
    status: code;
    /** Order-specific modifier about the type of food that should not be given */
    excludeFoodModifier?: Array<CodeableConcept>;
    /** Identifiers assigned to this order */
    identifier?: Array<Identifier>;
    /** proposal | plan | directive | order | original-order | reflex-order | filler-order | instance-order | option */
    intent: code;
    /** Who ordered the diet, formula or nutritional supplement */
    orderer?: Reference<"PractitionerRole" | "Practitioner">;
    /** Supplement components */
    supplement?: Array<NutritionOrderSupplement>;
    _instantiatesCanonical?: Array<Element>;
    /** List of the patient's food and nutrition-related allergies and intolerances */
    allergyIntolerance?: Array<Reference>;
    _instantiatesUri?: Array<Element>;
}
/** Required  nutrient modifications */
export interface NutritionOrderNutrient extends BackboneElement {
    /** Type of nutrient that is being modified */
    modifier?: CodeableConcept;
    /** Quantity of the specified nutrient */
    amount?: SimpleQuantity;
}
/** Required  texture modifications */
export interface NutritionOrderTexture extends BackboneElement {
    /** Code to indicate how to alter the texture of the foods, e.g. pureed */
    modifier?: CodeableConcept;
    /** Concepts that are used to identify an entity that is ingested for nutritional purposes */
    foodType?: CodeableConcept;
}
/** Oral diet components */
export interface NutritionOrderOralDiet extends BackboneElement {
    /** Type of oral diet or diet restrictions that describe what can be consumed orally */
    type?: Array<CodeableConcept>;
    /** Scheduled frequency of diet */
    schedule?: Array<Timing>;
    /** Required  nutrient modifications */
    nutrient?: Array<NutritionOrderNutrient>;
    /** Required  texture modifications */
    texture?: Array<NutritionOrderTexture>;
    /** The required consistency of fluids and liquids provided to the patient */
    fluidConsistencyType?: Array<CodeableConcept>;
    /** Instructions or additional information about the oral diet */
    instruction?: string;
    _instruction?: Element;
}
/** Formula feeding instruction as structured data */
export interface NutritionOrderAdministration extends BackboneElement {
    /** Scheduled frequency of enteral feeding */
    schedule?: Timing;
    /** The volume of formula to provide */
    quantity?: SimpleQuantity;
    rateQuantity?: Quantity;
    rateRatio?: Ratio;
}
/** Enteral formula components */
export interface NutritionOrderEnteralFormula extends BackboneElement {
    _administrationInstruction?: Element;
    /** Type of modular component to add to the feeding */
    additiveType?: CodeableConcept;
    _baseFormulaProductName?: Element;
    /** Upper limit on formula volume per unit of time */
    maxVolumeToDeliver?: SimpleQuantity;
    /** Type of enteral or infant formula */
    baseFormulaType?: CodeableConcept;
    /** How the formula should enter the patient's gastrointestinal tract */
    routeofAdministration?: CodeableConcept;
    /** Product or brand name of the modular additive */
    additiveProductName?: string;
    /** Amount of energy per specified volume that is required */
    caloricDensity?: SimpleQuantity;
    /** Formula feeding instructions expressed as text */
    administrationInstruction?: string;
    /** Formula feeding instruction as structured data */
    administration?: Array<NutritionOrderAdministration>;
    _additiveProductName?: Element;
    /** Product or brand name of the enteral or infant formula */
    baseFormulaProductName?: string;
}
/** Supplement components */
export interface NutritionOrderSupplement extends BackboneElement {
    /** Type of supplement product requested */
    type?: CodeableConcept;
    /** Product or brand name of the nutritional supplement */
    productName?: string;
    _productName?: Element;
    /** Scheduled frequency of supplement */
    schedule?: Array<Timing>;
    /** Amount of the nutritional supplement */
    quantity?: SimpleQuantity;
    /** Instructions or additional information about the oral supplement */
    instruction?: string;
    _instruction?: Element;
}
