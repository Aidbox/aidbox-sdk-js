/** GENERATED BY zen-cli
DON'T MODIFY MANUALLY */
import { unsignedInt } from "./unsignedInt";
import { uri } from "./uri";
import { Signature } from "./Signature";
import { Resource } from "./Resource";
import { instant } from "./instant";
import { Element } from "./Element";
import { code } from "./code";
import { Identifier } from "./Identifier";
import { BackboneElement } from "./BackboneElement";
import { decimal } from "./decimal";
/** A container for a collection of resources. */
export interface Bundle extends Resource {
    _timestamp?: Element;
    /** Digital Signature */
    signature?: Signature;
    _type?: Element;
    /** document | message | transaction | transaction-response | batch | batch-response | history | searchset | collection */
    type: code;
    /** If search, the total number of matches */
    total?: unsignedInt;
    link?: Array<BundleLink>;
    /** Persistent identifier for the bundle */
    identifier?: Identifier;
    /** Entry in the bundle - will have a resource or information */
    entry?: Array<BundleEntry>;
    /** When the bundle was assembled */
    timestamp?: instant;
    _total?: Element;
}
/** Search related information */
export interface BundleSearch extends BackboneElement {
    /** match | include | outcome - why this is in the result set */
    mode?: code;
    _mode?: Element;
    /** Search ranking (between 0 and 1) */
    score?: decimal;
    _score?: Element;
}
/** Additional execution information (transaction/batch/history) */
export interface BundleRequest extends BackboneElement {
    /** For conditional creates */
    ifNoneExist?: string;
    _ifNoneMatch?: Element;
    _ifNoneExist?: Element;
    /** GET | HEAD | POST | PUT | DELETE | PATCH */
    method: code;
    /** For managing cache currency */
    ifModifiedSince?: instant;
    _ifMatch?: Element;
    _method?: Element;
    /** For managing cache currency */
    ifNoneMatch?: string;
    /** URL for HTTP equivalent of this entry */
    url: uri;
    _url?: Element;
    /** For managing update contention */
    ifMatch?: string;
    _ifModifiedSince?: Element;
}
/** Results of execution (transaction/batch/history) */
export interface BundleResponse extends BackboneElement {
    _status?: Element;
    _location?: Element;
    /** The Etag for the resource (if relevant) */
    etag?: string;
    /** OperationOutcome with hints and warnings (for batch/transaction) */
    outcome?: Resource;
    _etag?: Element;
    /** Server's date time modified */
    lastModified?: instant;
    /** Status response code (text optional) */
    status: string;
    _lastModified?: Element;
    /** The location (if the operation returns a location) */
    location?: uri;
}
/** Entry in the bundle - will have a resource or information */
export interface BundleEntry extends BackboneElement {
    /** Links related to this entry */
    link?: Array<BundleLink>;
    /** URI for resource (Absolute URL server address or URI for UUID/OID) */
    fullUrl?: uri;
    _fullUrl?: Element;
    /** A resource in the bundle */
    resource?: Resource;
    /** Search related information */
    search?: BundleSearch;
    /** Additional execution information (transaction/batch/history) */
    request?: BundleRequest;
    /** Results of execution (transaction/batch/history) */
    response?: BundleResponse;
}
/** Links related to this Bundle */
export interface BundleLink extends BackboneElement {
    /** See http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1 */
    relation: string;
    _relation?: Element;
    /** Reference details for the link */
    url: uri;
    _url?: Element;
}
