/** GENERATED BY zen-cli
DON'T MODIFY MANUALLY */
import { UsageContext } from "./UsageContext";
import { ContactDetail } from "./ContactDetail";
import { CodeableConcept } from "./CodeableConcept";
import { uri } from "./uri";
import { Coding } from "./Coding";
import { id } from "./id";
import { dateTime } from "./dateTime";
import { canonical } from "./canonical";
import { integer } from "./integer";
import { DomainResource } from "./DomainResource";
import { markdown } from "./markdown";
import { Element } from "./Element";
import { Reference } from "./Reference";
import { code } from "./code";
import { Identifier } from "./Identifier";
import { BackboneElement } from "./BackboneElement";
/** A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification. */
export interface TestScript extends DomainResource {
    /** Natural language description of the test script */
    description?: markdown;
    /** Date last changed */
    date?: dateTime;
    /** Placeholder for evaluated elements */
    variable?: Array<TestScriptVariable>;
    /** Name of the publisher (organization or individual) */
    publisher?: string;
    /** Intended jurisdiction for test script (if applicable) */
    jurisdiction?: Array<CodeableConcept>;
    _publisher?: Element;
    /** Why this test script is defined */
    purpose?: markdown;
    _date?: Element;
    /** Name for this test script (computer friendly) */
    name: string;
    _status?: Element;
    _experimental?: Element;
    /** The context that the content is intended to support */
    useContext?: Array<UsageContext>;
    /** Use and/or publishing restrictions */
    copyright?: markdown;
    /** For testing purposes, not real usage */
    experimental?: boolean;
    /** Name for this test script (human friendly) */
    title?: string;
    _description?: Element;
    /** A series of required setup operations before tests are executed */
    setup?: TestScriptSetup;
    _purpose?: Element;
    /** draft | active | retired | unknown */
    status: code;
    _name?: Element;
    /** Canonical identifier for this test script, represented as a URI (globally unique) */
    url: uri;
    /** Additional identifier for the test script */
    identifier?: Identifier;
    _copyright?: Element;
    /** An abstract server representing a client or sender in a message exchange */
    origin?: Array<TestScriptOrigin>;
    _title?: Element;
    /** Fixture in the test script - by reference (uri) */
    fixture?: Array<TestScriptFixture>;
    /** Business version of the test script */
    version?: string;
    _version?: Element;
    /** A series of required clean up steps */
    teardown?: TestScriptTeardown;
    /** Contact details for the publisher */
    contact?: Array<ContactDetail>;
    /** Required capability that is assumed to function correctly on the FHIR server being tested */
    metadata?: TestScriptMetadata;
    /** An abstract server representing a destination or receiver in a message exchange */
    destination?: Array<TestScriptDestination>;
    /** A test in this script */
    test?: Array<TestScriptTest>;
    _url?: Element;
    /** Reference of the validation profile */
    profile?: Array<Reference>;
}
/** Required capability that is assumed to function correctly on the FHIR server being tested */
export interface TestScriptMetadata extends BackboneElement {
    /** Links to the FHIR specification */
    link?: Array<TestScriptLink>;
    /** Capabilities  that are assumed to function correctly on the FHIR server being tested */
    capability: Array<TestScriptCapability>;
}
/** Placeholder for evaluated elements */
export interface TestScriptVariable extends BackboneElement {
    /** Natural language description of the variable */
    description?: string;
    /** XPath or JSONPath against the fixture body */
    path?: string;
    /** HTTP header field name for source */
    headerField?: string;
    /** The FHIRPath expression against the fixture body */
    expression?: string;
    _path?: Element;
    /** Descriptive name for this variable */
    name: string;
    _hint?: Element;
    /** Hint help text for default value to enter */
    hint?: string;
    _expression?: Element;
    _description?: Element;
    _defaultValue?: Element;
    _headerField?: Element;
    _name?: Element;
    /** Fixture Id of source expression or headerField within this variable */
    sourceId?: id;
    _sourceId?: Element;
    /** Default, hard-coded, or user-defined value for this variable */
    defaultValue?: string;
}
/** An abstract server representing a client or sender in a message exchange */
export interface TestScriptOrigin extends BackboneElement {
    /** The index of the abstract origin server starting at 1 */
    index: integer;
    _index?: Element;
    /** FHIR-Client | FHIR-SDC-FormFiller */
    profile: Coding;
}
/** The setup operation to perform */
export interface TestScriptSetupActionOperation extends BackboneElement {
    /** Tracking/reporting operation description */
    description?: string;
    _destination?: Element;
    _accept?: Element;
    _params?: Element;
    _encodeRequestUrl?: Element;
    _targetId?: Element;
    /** delete | get | options | patch | post | put | head */
    method?: code;
    /** Id of fixture used for extracting the [id],  [type], and [vid] for GET requests */
    targetId?: id;
    _contentType?: Element;
    /** Each operation can have one or more header elements */
    requestHeader?: Array<TestScriptSetupActionOperationRequestHeader>;
    _method?: Element;
    /** Explicitly defined path parameters */
    params?: string;
    /** The operation code type that will be executed */
    type?: Coding;
    _origin?: Element;
    _description?: Element;
    /** Fixture Id of mapped request */
    requestId?: id;
    /** Whether or not to send the request url in encoded format */
    encodeRequestUrl: boolean;
    _label?: Element;
    _resource?: Element;
    /** Tracking/logging operation label */
    label?: string;
    /** Resource type */
    resource?: code;
    /** Request URL */
    url?: string;
    /** Server initiating the request */
    origin?: integer;
    /** Mime type of the request payload contents, with charset etc. */
    contentType?: code;
    _responseId?: Element;
    /** Fixture Id of body for PUT and POST requests */
    sourceId?: id;
    /** Fixture Id of mapped response */
    responseId?: id;
    _sourceId?: Element;
    _requestId?: Element;
    /** Server responding to the request */
    destination?: integer;
    _url?: Element;
    /** Mime type to accept in the payload of the response, with charset etc. */
    accept?: code;
}
/** The assertion to perform */
export interface TestScriptSetupActionAssert extends BackboneElement {
    /** okay | created | noContent | notModified | bad | forbidden | notFound | methodNotAllowed | conflict | gone | preconditionFailed | unprocessable */
    response?: code;
    /** Tracking/reporting assertion description */
    description?: string;
    /** XPath or JSONPath expression */
    path?: string;
    /** HTTP header field name */
    headerField?: string;
    /** Id of the source fixture to be evaluated */
    compareToSourceId?: string;
    _operator?: Element;
    _response?: Element;
    _navigationLinks?: Element;
    _direction?: Element;
    /** The FHIRPath expression to be evaluated */
    expression?: string;
    _compareToSourceId?: Element;
    _path?: Element;
    _contentType?: Element;
    /** The value to compare to */
    value?: string;
    _requestMethod?: Element;
    _responseCode?: Element;
    /** Will this assert produce a warning only on error? */
    warningOnly: boolean;
    _value?: Element;
    _validateProfileId?: Element;
    _expression?: Element;
    _description?: Element;
    /** The FHIRPath expression to evaluate against the source fixture */
    compareToSourceExpression?: string;
    _label?: Element;
    _resource?: Element;
    _requestURL?: Element;
    _headerField?: Element;
    /** Tracking/logging assertion label */
    label?: string;
    /** Resource type */
    resource?: code;
    /** HTTP response code to test */
    responseCode?: string;
    /** Fixture Id of minimum content resource */
    minimumId?: string;
    /** equals | notEquals | in | notIn | greaterThan | lessThan | empty | notEmpty | contains | notContains | eval */
    operator?: code;
    /** Mime type to compare against the 'Content-Type' header */
    contentType?: code;
    /** XPath or JSONPath expression to evaluate against the source fixture */
    compareToSourcePath?: string;
    /** Profile Id of validation profile reference */
    validateProfileId?: id;
    _compareToSourceExpression?: Element;
    /** Fixture Id of source expression or headerField */
    sourceId?: id;
    _warningOnly?: Element;
    _sourceId?: Element;
    /** delete | get | options | patch | post | put | head */
    requestMethod?: code;
    _compareToSourcePath?: Element;
    _minimumId?: Element;
    /** Request URL comparison value */
    requestURL?: string;
    /** response | request */
    direction?: code;
    /** Perform validation on navigation links? */
    navigationLinks?: boolean;
}
/** A test in this script */
export interface TestScriptTest extends BackboneElement {
    /** Tracking/logging name of this test */
    name?: string;
    _name?: Element;
    /** Tracking/reporting short description of the test */
    description?: string;
    _description?: Element;
    /** A test operation or assert to perform */
    action: Array<TestScriptAction>;
}
/** Capabilities  that are assumed to function correctly on the FHIR server being tested */
export interface TestScriptCapability extends BackboneElement {
    /** The expected capabilities of the server */
    description?: string;
    /** Required Capability Statement */
    capabilities: canonical;
    _destination?: Element;
    _link?: Array<Element>;
    _origin?: Array<Element>;
    _required?: Element;
    _description?: Element;
    _validated?: Element;
    /** Links to the FHIR specification */
    link?: Array<uri>;
    _capabilities?: Element;
    /** Which origin server these requirements apply to */
    origin?: Array<integer>;
    /** Are the capabilities validated? */
    validated: boolean;
    /** Which server these requirements apply to */
    destination?: integer;
    /** Are the capabilities required? */
    required: boolean;
}
/** A series of required setup operations before tests are executed */
export interface TestScriptSetup extends BackboneElement {
    /** A setup operation or assert to perform */
    action: Array<TestScriptAction>;
}
/** A setup operation or assert to perform */
export interface TestScriptAction extends BackboneElement {
    operation?: TestScriptSetupActionOperation;
    assert?: TestScriptSetupActionAssert;
}
/** Each operation can have one or more header elements */
export interface TestScriptSetupActionOperationRequestHeader extends BackboneElement {
    /** HTTP header field name */
    field: string;
    _field?: Element;
    /** HTTP headerfield value */
    value: string;
    _value?: Element;
}
/** Links to the FHIR specification */
export interface TestScriptLink extends BackboneElement {
    /** URL to the specification */
    url: uri;
    _url?: Element;
    /** Short description */
    description?: string;
    _description?: Element;
}
/** Fixture in the test script - by reference (uri) */
export interface TestScriptFixture extends BackboneElement {
    /** Whether or not to implicitly create the fixture during setup */
    autocreate: boolean;
    _autocreate?: Element;
    /** Whether or not to implicitly delete the fixture during teardown */
    autodelete: boolean;
    _autodelete?: Element;
    /** Reference of the resource */
    resource?: Reference;
}
/** A series of required clean up steps */
export interface TestScriptTeardown extends BackboneElement {
    /** One or more teardown operations to perform */
    action: Array<TestScriptAction>;
}
/** An abstract server representing a destination or receiver in a message exchange */
export interface TestScriptDestination extends BackboneElement {
    /** The index of the abstract destination server starting at 1 */
    index: integer;
    _index?: Element;
    /** FHIR-Server | FHIR-SDC-FormManager | FHIR-SDC-FormReceiver | FHIR-SDC-FormProcessor */
    profile: Coding;
}
