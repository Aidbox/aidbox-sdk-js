/** GENERATED BY zen-cli
DON'T MODIFY MANUALLY */
import { UsageContext } from "./UsageContext";
import { ContactDetail } from "./ContactDetail";
import { CodeableConcept } from "./CodeableConcept";
import { uri } from "./uri";
import { dateTime } from "./dateTime";
import { canonical } from "./canonical";
import { integer } from "./integer";
import { DomainResource } from "./DomainResource";
import { markdown } from "./markdown";
import { Element } from "./Element";
import { code } from "./code";
import { BackboneElement } from "./BackboneElement";
/** A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set. */
export interface GraphDefinition extends DomainResource {
    /** Natural language description of the graph definition */
    description?: markdown;
    /** Date last changed */
    date?: dateTime;
    /** Name of the publisher (organization or individual) */
    publisher?: string;
    /** Intended jurisdiction for graph definition (if applicable) */
    jurisdiction?: Array<CodeableConcept>;
    _publisher?: Element;
    /** Why this graph definition is defined */
    purpose?: markdown;
    _date?: Element;
    /** Name for this graph definition (computer friendly) */
    name: string;
    _status?: Element;
    /** Type of resource at which the graph starts */
    start: code;
    _experimental?: Element;
    /** The context that the content is intended to support */
    useContext?: Array<UsageContext>;
    /** For testing purposes, not real usage */
    experimental?: boolean;
    _description?: Element;
    _profile?: Element;
    _purpose?: Element;
    /** draft | active | retired | unknown */
    status: code;
    link?: Array<GraphDefinitionLink>;
    _name?: Element;
    /** Canonical identifier for this graph definition, represented as a URI (globally unique) */
    url?: uri;
    /** Business version of the graph definition */
    version?: string;
    _version?: Element;
    _start?: Element;
    /** Contact details for the publisher */
    contact?: Array<ContactDetail>;
    _url?: Element;
    /** Profile on base resource */
    profile?: canonical;
}
/** Compartment Consistency Rules */
export interface GraphDefinitionLinkCompartment extends BackboneElement {
    /** Documentation for FHIRPath expression */
    description?: string;
    _code?: Element;
    /** Custom rule, as a FHIRPath expression */
    expression?: string;
    /** condition | requirement */
    use: code;
    /** identical | matching | different | custom */
    rule: code;
    _expression?: Element;
    _description?: Element;
    /** Patient | Encounter | RelatedPerson | Practitioner | Device */
    code: code;
    _rule?: Element;
    _use?: Element;
}
/** Potential target for the link */
export interface GraphDefinitionLinkTarget extends BackboneElement {
    /** Type of resource this link refers to */
    type: code;
    _type?: Element;
    /** Criteria for reverse lookup */
    params?: string;
    _params?: Element;
    /** Profile for the target resource */
    profile?: canonical;
    _profile?: Element;
    /** Compartment Consistency Rules */
    compartment?: Array<GraphDefinitionLinkCompartment>;
    /** Additional links from target resource */
    link?: Array<GraphDefinitionLink>;
}
/** Links this graph makes rules about */
export interface GraphDefinitionLink extends BackboneElement {
    /** Why this link is specified */
    description?: string;
    /** Path in the resource that contains the link */
    path?: string;
    /** Minimum occurrences for this link */
    min?: integer;
    _path?: Element;
    _sliceName?: Element;
    /** Which slice (if profiled) */
    sliceName?: string;
    _description?: Element;
    _min?: Element;
    /** Maximum occurrences for this link */
    max?: string;
    _max?: Element;
    /** Potential target for the link */
    target?: Array<GraphDefinitionLinkTarget>;
}
