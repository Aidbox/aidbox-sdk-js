/** GENERATED BY zen-cli
DON'T MODIFY MANUALLY */
import { Attachment } from "./Attachment";
import { CodeableConcept } from "./CodeableConcept";
import { dateTime } from "./dateTime";
import { Range } from "./Range";
import { Quantity } from "./Quantity";
import { DomainResource } from "./DomainResource";
import { Ratio } from "./Ratio";
import { Element } from "./Element";
import { Reference } from "./Reference";
import { Identifier } from "./Identifier";
import { BackboneElement } from "./BackboneElement";
/** The detailed description of a substance, typically at a level beyond what is used for prescribing. */
export interface SubstanceSpecification extends DomainResource {
    /** Textual description of the substance */
    description?: string;
    /** General specifications for this substance, including how it is related to other substances */
    property?: Array<SubstanceSpecificationProperty>;
    name?: Array<SubstanceSpecificationName>;
    /** General information detailing this substance */
    referenceInformation?: Reference<"SubstanceReferenceInformation">;
    /** A link between this substance and another, with details of the relationship */
    relationship?: Array<SubstanceSpecificationRelationship>;
    /** High level categorization, e.g. polymer or nucleic acid */
    type?: CodeableConcept;
    /** Moiety, for structural modifications */
    moiety?: Array<SubstanceSpecificationMoiety>;
    /** Supporting literature */
    source?: Array<Reference>;
    _description?: Element;
    /** Data items specific to nucleic acids */
    nucleicAcid?: Reference<"SubstanceNucleicAcid">;
    /** Structural information */
    structure?: SubstanceSpecificationStructure;
    /** Status of substance within the catalogue e.g. approved */
    status?: CodeableConcept;
    /** Textual comment about this record of a substance */
    comment?: string;
    /** Codes associated with the substance */
    code?: Array<SubstanceSpecificationCode>;
    /** Identifier by which this substance is known */
    identifier?: Identifier;
    /** The molecular weight or weight range (for proteins, polymers or nucleic acids) */
    molecularWeight?: Array<SubstanceSpecificationStructureIsotopeMolecularWeight>;
    /** Data items specific to polymers */
    polymer?: Reference<"SubstancePolymer">;
    /** Data items specific to proteins */
    protein?: Reference<"SubstanceProtein">;
    /** If the substance applies to only human or veterinary use */
    domain?: CodeableConcept;
    /** Material or taxonomic/anatomical source for the substance */
    sourceMaterial?: Reference<"SubstanceSourceMaterial">;
    _comment?: Element;
}
/** Structural information */
export interface SubstanceSpecificationStructure extends BackboneElement {
    /** Applicable for single substances that contain a radionuclide or a non-natural isotopic ratio */
    isotope?: Array<SubstanceSpecificationIsotope>;
    _molecularFormulaByMoiety?: Element;
    /** Molecular formula */
    molecularFormula?: string;
    /** Supporting literature */
    source?: Array<Reference>;
    /** Molecular structural representation */
    representation?: Array<SubstanceSpecificationRepresentation>;
    _molecularFormula?: Element;
    /** Optical activity type */
    opticalActivity?: CodeableConcept;
    /** The molecular weight or weight range (for proteins, polymers or nucleic acids) */
    molecularWeight?: SubstanceSpecificationStructureIsotopeMolecularWeight;
    /** Stereochemistry type */
    stereochemistry?: CodeableConcept;
    /** Specified per moiety according to the Hill system, i.e. first C, then H, then alphabetical, each moiety separated by a dot */
    molecularFormulaByMoiety?: string;
}
/** Names applicable to this substance */
export interface SubstanceSpecificationName extends BackboneElement {
    /** Details of the official nature of this name */
    official?: Array<SubstanceSpecificationNameOfficial>;
    /** The jurisdiction where this name applies */
    jurisdiction?: Array<CodeableConcept>;
    /** The actual name */
    name: string;
    /** Name type */
    type?: CodeableConcept;
    /** Supporting literature */
    source?: Array<Reference>;
    /** The status of the name */
    status?: CodeableConcept;
    /** Language of the name */
    language?: Array<CodeableConcept>;
    /** A synonym of this name */
    synonym?: Array<SubstanceSpecificationName>;
    _name?: Element;
    /** A translation for this name */
    translation?: Array<SubstanceSpecificationName>;
    _preferred?: Element;
    /** If this is the preferred name for this substance */
    preferred?: boolean;
    /** The use context of this name for example if there is a different name a drug active ingredient as opposed to a food colour additive */
    domain?: Array<CodeableConcept>;
}
/** Moiety, for structural modifications */
export interface SubstanceSpecificationMoiety extends BackboneElement {
    /** Role that the moiety is playing */
    role?: CodeableConcept;
    _amountString?: Element;
    /** Textual name for this moiety substance */
    name?: string;
    /** Molecular formula */
    molecularFormula?: string;
    amountQuantity?: Quantity;
    _molecularFormula?: Element;
    amountString?: string;
    /** Optical activity type */
    opticalActivity?: CodeableConcept;
    _name?: Element;
    /** Identifier by which this moiety substance is known */
    identifier?: Identifier;
    /** Stereochemistry type */
    stereochemistry?: CodeableConcept;
}
/** The molecular weight or weight range (for proteins, polymers or nucleic acids) */
export interface SubstanceSpecificationStructureIsotopeMolecularWeight extends BackboneElement {
    /** The method by which the molecular weight was determined */
    method?: CodeableConcept;
    /** Type of molecular weight such as exact, average (also known as. number average), weight average */
    type?: CodeableConcept;
    /** Used to capture quantitative values for a variety of elements. If only limits are given, the arithmetic mean would be the average. If only a single definite value for a given element is given, it would be captured in this field */
    amount?: Quantity;
}
/** Codes associated with the substance */
export interface SubstanceSpecificationCode extends BackboneElement {
    /** The specific code */
    code?: CodeableConcept;
    /** Status of the code assignment */
    status?: CodeableConcept;
    /** The date at which the code status is changed as part of the terminology maintenance */
    statusDate?: dateTime;
    _statusDate?: Element;
    /** Any comment can be provided in this field, if necessary */
    comment?: string;
    _comment?: Element;
    /** Supporting literature */
    source?: Array<Reference>;
}
/** General specifications for this substance, including how it is related to other substances */
export interface SubstanceSpecificationProperty extends BackboneElement {
    /** A category for this property, e.g. Physical, Chemical, Enzymatic */
    category?: CodeableConcept;
    _amountString?: Element;
    definingSubstanceCodeableConcept?: CodeableConcept;
    definingSubstanceReference?: Reference<"SubstanceSpecification" | "Substance">;
    amountQuantity?: Quantity;
    amountString?: string;
    /** Property type e.g. viscosity, pH, isoelectric point */
    code?: CodeableConcept;
    _parameters?: Element;
    /** Parameters that were used in the measurement of a property (e.g. for viscosity: measured at 20C with a pH of 7.1) */
    parameters?: string;
}
/** Molecular structural representation */
export interface SubstanceSpecificationRepresentation extends BackboneElement {
    /** The type of structure (e.g. Full, Partial, Representative) */
    type?: CodeableConcept;
    /** The structural representation as text string in a format e.g. InChI, SMILES, MOLFILE, CDX */
    representation?: string;
    _representation?: Element;
    /** An attached file with the structural representation */
    attachment?: Attachment;
}
/** A link between this substance and another, with details of the relationship */
export interface SubstanceSpecificationRelationship extends BackboneElement {
    substanceCodeableConcept?: CodeableConcept;
    _amountString?: Element;
    /** For use when the numeric */
    amountRatioLowLimit?: Ratio;
    /** An operator for the amount, for example "average", "approximately", "less than" */
    amountType?: CodeableConcept;
    /** For example "salt to parent", "active moiety", "starting material" */
    relationship?: CodeableConcept;
    /** Supporting literature */
    source?: Array<Reference>;
    substanceReference?: Reference<"SubstanceSpecification">;
    amountRatio?: Ratio;
    amountQuantity?: Quantity;
    amountString?: string;
    _isDefining?: Element;
    /** For example where an enzyme strongly bonds with a particular substance, this is a defining relationship for that enzyme, out of several possible substance relationships */
    isDefining?: boolean;
    amountRange?: Range;
}
/** Applicable for single substances that contain a radionuclide or a non-natural isotopic ratio */
export interface SubstanceSpecificationIsotope extends BackboneElement {
    /** Substance identifier for each non-natural or radioisotope */
    identifier?: Identifier;
    /** Substance name for each non-natural or radioisotope */
    name?: CodeableConcept;
    /** The type of isotopic substitution present in a single substance */
    substitution?: CodeableConcept;
    /** Half life - for a non-natural nuclide */
    halfLife?: Quantity;
    molecularWeight?: SubstanceSpecificationStructureIsotopeMolecularWeight;
}
/** Details of the official nature of this name */
export interface SubstanceSpecificationNameOfficial extends BackboneElement {
    /** Which authority uses this official name */
    authority?: CodeableConcept;
    /** The status of the official name */
    status?: CodeableConcept;
    /** Date of official name change */
    date?: dateTime;
    _date?: Element;
}
