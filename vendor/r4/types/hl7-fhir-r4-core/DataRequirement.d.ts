/** GENERATED BY zen-cli
DON'T MODIFY MANUALLY */
import { positiveInt } from "./positiveInt";
import { Period } from "./Period";
import { CodeableConcept } from "./CodeableConcept";
import { Coding } from "./Coding";
import { dateTime } from "./dateTime";
import { canonical } from "./canonical";
import { Duration } from "./Duration";
import { Element } from "./Element";
import { Reference } from "./Reference";
import { code } from "./code";
/** Base StructureDefinition for DataRequirement Type: Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data. */
export interface DataRequirement extends Element {
    /** Number of results */
    limit?: positiveInt;
    _limit?: Element;
    _mustSupport?: Array<Element>;
    subjectCodeableConcept?: CodeableConcept;
    _type?: Element;
    /** The type of the required data */
    type: code;
    /** Indicates specific structure elements that are referenced by the knowledge module */
    mustSupport?: Array<string>;
    _profile?: Array<Element>;
    /** What codes are expected */
    codeFilter?: Array<DataRequirementCodeFilter>;
    subjectReference?: Reference<"Group">;
    /** What dates/date ranges are expected */
    dateFilter?: Array<DataRequirementDateFilter>;
    /** Order of the results */
    sort?: Array<DataRequirementSort>;
    /** The profile of the required data */
    profile?: Array<canonical>;
}
/** What codes are expected */
export interface DataRequirementCodeFilter extends Element {
    /** A code-valued attribute to filter on */
    path?: string;
    _path?: Element;
    /** A coded (token) parameter to search on */
    searchParam?: string;
    _searchParam?: Element;
    /** Valueset for the filter */
    valueSet?: canonical;
    _valueSet?: Element;
    /** What code is expected */
    code?: Array<Coding>;
}
/** What dates/date ranges are expected */
export interface DataRequirementDateFilter extends Element {
    /** A date-valued attribute to filter on */
    path?: string;
    /** A date valued parameter to search on */
    searchParam?: string;
    _path?: Element;
    valueDateTime?: dateTime;
    _searchParam?: Element;
    valueDuration?: Duration;
    _valueDateTime?: Element;
    valuePeriod?: Period;
}
/** Order of the results */
export interface DataRequirementSort extends Element {
    /** The name of the attribute to perform the sort */
    path: string;
    _path?: Element;
    /** ascending | descending */
    direction: code;
    _direction?: Element;
}
