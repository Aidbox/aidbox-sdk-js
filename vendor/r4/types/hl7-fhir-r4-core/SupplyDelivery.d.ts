/** GENERATED BY zen-cli
DON'T MODIFY MANUALLY */
import { Period } from "./Period";
import { CodeableConcept } from "./CodeableConcept";
import { SimpleQuantity } from "./SimpleQuantity";
import { dateTime } from "./dateTime";
import { Timing } from "./Timing";
import { DomainResource } from "./DomainResource";
import { Element } from "./Element";
import { Reference } from "./Reference";
import { Identifier } from "./Identifier";
import { BackboneElement } from "./BackboneElement";
/** Record of delivery of what is supplied. */
export interface SupplyDelivery extends DomainResource {
    resourceType: 'SupplyDelivery';
    /** Patient for whom the item is supplied */
    patient?: Reference<'Patient'>;
    /** Dispenser */
    supplier?: Reference<'PractitionerRole' | 'Organization' | 'Practitioner'>;
    /** The item that is delivered or supplied */
    suppliedItem?: SupplyDeliverySuppliedItem;
    _status?: Element;
    /** Category of dispense event */
    type?: `${SupplyDeliveryType}`;
    occurrenceTiming?: Timing;
    occurrencePeriod?: Period;
    /** in-progress | completed | abandoned | entered-in-error */
    status?: `${SupplyDeliveryStatus}`;
    /** External identifier */
    identifier?: Array<Identifier>;
    /** Fulfills plan, proposal or order */
    basedOn?: Array<Reference>;
    /** Part of referenced event */
    partOf?: Array<Reference>;
    occurrenceDateTime?: dateTime;
    /** Who collected the Supply */
    receiver?: Array<Reference>;
    /** Where the Supply was sent */
    destination?: Reference<'Location'>;
    _occurrenceDateTime?: Element;
}
/** The item that is delivered or supplied */
export interface SupplyDeliverySuppliedItem extends BackboneElement {
    /** Amount dispensed */
    quantity?: SimpleQuantity;
    itemCodeableConcept?: CodeableConcept;
    itemReference?: Reference<'Medication' | 'Device' | 'Substance'>;
}
/** Category of dispense event */
export declare enum SupplyDeliveryType {
    Device = "device",
    Medication = "medication"
}
/** in-progress | completed | abandoned | entered-in-error */
export declare enum SupplyDeliveryStatus {
    Abandoned = "abandoned",
    Completed = "completed",
    EnteredInError = "entered-in-error",
    InProgress = "in-progress"
}
